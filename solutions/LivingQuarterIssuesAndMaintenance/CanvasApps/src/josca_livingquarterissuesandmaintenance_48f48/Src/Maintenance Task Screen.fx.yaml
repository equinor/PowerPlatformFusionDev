"'Maintenance Task Screen' As screen":
    OnHidden: |-
        =Set(gblIgnoreParam, true);
        UpdateContext({locActiveIssueReport: Blank(), locActiveIssueReportTask: Blank(), locIssueReportFocused: false});
    OnVisible: |-
        =If(
            And(
                !IsBlank(Param("taskId")),
                !gblIgnoreParam
            ),
            /*With(
                {IssueRegistrationTaskParamGUID: GUID(Param("taskId"))},
            */
            UpdateContext(
                {
                    locActiveIssueReportTask: LookUp(
                        'Living Quarter Maintenance Tasks',
                        ActivityGUID = GUID(Param("taskId"))//IssueRegistrationTaskParamGUID
                    ),
                    locActiveIssueReport: LookUp(
                        'Issue Registrations',
                        IssueRegistrationGUID = LookUp(
                            'Living Quarter Maintenance Tasks',
                            ActivityGUID = GUID(Param("taskId"))//IssueRegistrationTaskParamGUID
                        ).'Issue Registration'.IssueRegistrationGUID
                    ),
                    locIssueReportFocused: true,
                    locActiveTaskSection: Coalesce(Param("taskSection"), "General")
                }
            );
            Set(
                gblActivePlant,
                LookUp(
                    Installations,
                    ThisRecord.PlantGUID = locActiveIssueReport.Installation.PlantGUID
                        /* 
                        // This does not work for some reason:
                        ThisRecord.PlantGUID = IssueItem.Installation.PlantGUID 
                        */ 
                )
            );
            EditForm(frmSelectedIssueTaskItemMTS),
            ViewForm(frmSelectedIssueTaskItemMTS)
            //)
        );

    vcoMainMTS As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =16
        LayoutMode: =LayoutMode.Auto
        PaddingTop: =EDSDefaults.LayoutGap
        Width: =Parent.Width
        ZIndex: =1

        hcoTopBarMTS As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =Color.Transparent
            BorderStyle: =EDSStyles.TopBar.BorderStyle
            Fill: =EDSStyles.TopBar.Fill
            FillPortions: =0
            Height: =EDSStyles.TopBar.Height+16
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =EDSStyles.TopBar.LayoutGap
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutWrap: =
            PaddingBottom: =16
            PaddingLeft: =16  
            PaddingRight: =16
            Width: =Parent.Width
            ZIndex: =1

            icoTopBarMenuToggleMTS As image:
                AccessibleLabel: ="Toggles visibility of main menu dropdown"
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.Dashed
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =EDSDefaults.FocusedBorderColor
                FocusedBorderThickness: =EDSDefaults.FocusedBorderThickness
                Height: =EDSStyles.IconMenu.TemplateSize
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: |-
                    =If(
                        gblEDSShowAppMenu,
                        EDSIcons.ChevronDown,
                        EDSIcons.Menu
                    )
                LayoutMinHeight: =0
                LayoutMinWidth: =0
                OnSelect: |-
                    =//UpdateContext({locShowMenu: !locShowMenu})
                    Set(gblEDSShowAppMenu, !gblEDSShowAppMenu)
                PaddingBottom: =12
                PaddingLeft: =12
                PaddingRight: =12
                PaddingTop: =12
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                TabIndex: =0
                Width: =EDSStyles.IconMenu.TemplateSize
                ZIndex: =1

            "tabUserDisplayLanguageSettingMTS As 'Tab list'.pcfdataset":
                AccessibleLabel: ="Switch between English and Norwegian display language for the application."
                DisplayMode: =DisplayMode.Edit
                Height: =36
                Items: |-
                    =[
                        {
                            Title: "EN",
                            Language: "en-GB"
                        },
                        {
                            Title: "NO",
                            Language: "no-NO"
                        }
                    ]
                LayoutMinHeight: =55
                LayoutMinWidth: =280
                OnChange: =Set(gblDisplayLanguageSetting, Self.Selected)
                Size: ='TabList.Size'.Small
                Width: =100
                X: =0
                Y: =0
                ZIndex: =2

                Title1_2 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Title"
                    FieldName: ="Title"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =13

            lblTopBarAppScreenNameMTS As label:
                Align: =Align.Center
                AutoHeight: =true
                BorderColor: =EDSDefaults.BorderColor
                BorderStyle: =EDSDefaults.BorderStyle
                BorderThickness: =EDSDefaults.BorderThickness
                Color: =EDSDefaults.Color
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FillPortions: =1
                FocusedBorderThickness: =4
                Font: =EDSDefaults.Font
                FontWeight: =EDSFonts.Heading.H1.Weight
                Height: =Self.Size*Self.LineHeight * 1.75
                LayoutMinHeight: =EDSDefaults.Height
                LayoutMinWidth: =64
                LineHeight: =EDSFonts.Heading.H1.LineHeight
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =EDSFonts.Heading.H1.Size
                Text: |-
                    =Switch(
                        gblDisplayLanguageSetting.Language,
                        "no-NO",
                        $"Oppgaver for feilrapport: {locActiveIssueReport.SubmissionId}",
                        $"Tasks for issue: {locActiveIssueReport.SubmissionId}"
                    )
                Visible: =hcoTopBarMTS.Width > (icoTopBarMenuToggleMTS.Width + galTopBarHorizontalMenuMTS.Width+shpTopBarMenuDividerMTS.Width+1+(Parent.LayoutGap*4))
                Width: =EDSStyles.Label.Width
                ZIndex: =3

            shpTopBarMenuSpacerMTS As rectangle:
                BorderColor: =Color.Transparent
                BorderStyle: =BorderStyle.None
                Fill: =Color.Transparent
                FillPortions: =1
                FocusedBorderThickness: =0
                Height: =48
                LayoutMinWidth: =0
                Visible: |-
                    =//Self.Width<10
                    !lblTopBarAppScreenNameMTS.Visible
                Width: =0
                ZIndex: =5

            galTabsTopBarMTS As gallery.galleryHorizontal:
                AccessibleLabel: =$"Tab selection"
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =Color.Transparent
                BorderStyle: =EDSDefaults.BorderStyle
                BorderThickness: =EDSStyles.Tabs.BorderThickness
                Fill: =EDSStyles.Tabs.Fill
                FillPortions: =0
                FocusedBorderThickness: =EDSDefaults.FocusedBorderThickness
                Height: =EDSStyles.Tabs.LayoutMinHeight
                Items: =colAppMenu
                LayoutMinHeight: =287
                LayoutMinWidth: =320
                OnSelect: |
                    =Switch(
                        Lower(ThisItem.Action),
                        "navigate",
                        Navigate(
                            ThisItem.Option.Screen,
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "Transition"
                            ).Value
                        ),
                        "launch",
                        Launch(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "address"
                            ).Value
                        ),
                        "notify",
                        Notify(
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "text"
                                ).Value,
                                //ThisItem.Option.Text,// fallback to the main option property instead of using lookup.
                                "Change this formula to what you wish, you can also provide a custom option"
                            ),
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "notification_type"
                                ).Value,
                                NotificationType.Information
                            ),
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "timeout"
                            ).Value
                        ),
                        "return",
                        Back(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "transition"
                            ).Value
                        ),
                        false
                    );
                ShowNavigation: =Self.Width<EDSStyles.Tabs.LayoutMinWidth*CountRows(Self.AllItems)
                ShowScrollbar: =false
                TabIndex: =0
                TemplateFill: =EDSStyles.Tabs.TemplateFill
                TemplatePadding: =0
                TemplateSize: =EDSStyles.Tabs.LayoutMinWidth
                Visible: =Self.Width < (Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - Parent.LayoutGap*2 - Self.Width)
                Width: |-
                    =Max(
                        Min(
                            (CountRows(Self.AllItems) * Self.TemplateWidth)
                        ),
                        1
                    )
                WrapCount: =0
                X: =EDSStyles.Tabs.BorderThickness
                ZIndex: =6

                vcoTabsTobBarTabItemMTS As groupContainer.horizontalAutoLayoutContainer:
                    BorderStyle: =BorderStyle.None
                    Height: =Parent.TemplateHeight
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: |
                        =EDSStyles.Tabs.BorderThickness
                    Width: =Parent.TemplateWidth
                    ZIndex: =1

                    btnTabsTobBarTabItemButtonMTS As button:
                        BorderColor: =Color.Transparent
                        BorderStyle: =BorderStyle.Dashed
                        BorderThickness: =EDSStyles.Tabs.BorderThickness
                        Color: |-
                            =If(
                                Or(
                                    And(
                                        // This will highlight the correct item when used as screen navigation.
                                        ThisItem.Action = "navigate",
                                        ThisItem.Option.Screen = App.ActiveScreen
                                    ),
                                    And(
                                        ThisItem.Action <> "navigate",
                                        ThisItem.IsSelected
                                    )
                                ),
                                EDSStyles.Tabs.ActiveColor,
                                EDSStyles.Tabs.Color
                            )
                        DisabledBorderColor: =EDSStyles.Tabs.DisabledBorderColor
                        DisabledColor: =EDSStyles.Tabs.DisabledColor
                        DisabledFill: =EDSStyles.Tabs.DisabledFill
                        Fill: =Color.Transparent
                        FocusedBorderColor: =EDSDefaults.FocusedBorderColor
                        FocusedBorderThickness: =EDSDefaults.FocusedBorderThickness
                        Font: =EDSStyles.Tabs.Font.Font
                        FontWeight: |
                            =EDSStyles.Tabs.Font.Weight
                        Height: =Parent.Height-shpTabsTobBarTabItemBorderMTS.Height-Parent.PaddingTop
                        HoverBorderColor: =Self.BorderColor
                        HoverColor: =EDSStyles.Tabs.HoverColor
                        HoverFill: =EDSStyles.Tabs.HoverFill
                        LayoutMinHeight: =Parent.Height-shpTabsTobBarTabItemBorderMTS.Height
                        LayoutMinWidth: =galTabsTopBarMTS.TemplateWidth-(Self.FocusedBorderThickness*2)
                        OnSelect: =Select(shpTabsTobBarSelectParentWorkaroundMTS);
                        PaddingBottom: =EDSStyles.Tabs.PaddingBottom
                        PaddingLeft: =EDSStyles.Tabs.PaddingLeft
                        PaddingRight: =EDSStyles.Tabs.PaddingRight
                        PaddingTop: =EDSStyles.Tabs.PaddingTop
                        PressedBorderColor: =Self.BorderColor
                        PressedColor: =EDSStyles.Tabs.PressedColor
                        PressedFill: =EDSStyles.Tabs.PressedFill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =EDSStyles.Tabs.RadiusTopLeft
                        RadiusTopRight: =EDSStyles.Tabs.RadiusTopRight
                        Size: =EDSStyles.Tabs.Font.Size
                        Text: |-
                            =Switch(
                                gblDisplayLanguageSetting.Language,
                                "no-NO",
                                ThisItem.NO_Title,
                                ThisItem.Title
                            )
                        Tooltip: =ThisItem.SubTitle
                        Width: =galTabsTopBarMTS.TemplateWidth -(Self.FocusedBorderThickness)
                        ZIndex: =1

                    shpTabsTobBarTabItemBorderMTS As rectangle:
                        BorderColor: =Color.Transparent
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =EDSStyles.Tabs.DisabledFill
                        Fill: |-
                            =If(
                                Or(
                                    And(
                                        // This will highlight the correct item when used as screen navigation.
                                        ThisItem.Action = "navigate",
                                        ThisItem.Option.Screen = App.ActiveScreen
                                    ),
                                    And(
                                        ThisItem.Action <> "navigate",
                                        ThisItem.IsSelected
                                    )
                                ),
                                EDSStyles.Tabs.ActiveBorderColor,
                                EDSStyles.Tabs.BorderColor
                            )
                        FocusedBorderThickness: =4
                        Height: =EDSStyles.Tabs.BorderThickness
                        HoverFill: =EDSStyles.Tabs.HoverFill
                        LayoutMinWidth: =galTabsTopBarMTS.TemplateWidth
                        ZIndex: =3

                shpTabsTobBarSelectParentWorkaroundMTS As rectangle:
                    AccessibleLabel: =$"Tab for {btnTabsTobBarTabItemButtonMTS.Text}"
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    DisabledFill: =Color.Transparent
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =EDSDefaults.FocusedBorderColor
                    FocusedBorderThickness: =EDSDefaults.FocusedBorderThickness
                    Height: =0
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: |-
                        =Select(Parent)
                        //Workaround for selecting this item so that the gallery control updates its selected item.
                    PressedFill: =RGBA(0, 0, 0, 0)
                    TabIndex: =0
                    Tooltip: =ThisItem.SubTitle
                    Visible: =false
                    Width: =0
                    ZIndex: =2

            shpTopBarMenuDividerMTS As rectangle:
                BorderColor: =Color.Transparent
                BorderStyle: =BorderStyle.None
                Fill: =EDSColors.Background.Medium
                FocusedBorderThickness: =0
                Height: =48
                LayoutMinWidth: =EDSStyles.Tabs.LayoutMinWidth
                Width: =2
                ZIndex: =7

            galTopBarHorizontalMenuMTS As gallery.galleryHorizontal:
                AccessibleLabel: ="Menu with links to common external resources and back button for app navigation."
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =EDSDefaults.BorderColor
                BorderStyle: =EDSDefaults.BorderStyle
                BorderThickness: =EDSDefaults.BorderThickness
                Fill: =EDSStyles.Icon.Fill
                FillPortions: =0
                FocusedBorderThickness: |-
                    =//EDSDefaults.FocusedBorderThickness
                    EDSDefaults.FocusedBorderThickness
                Height: =EDSStyles.Icon.Height
                Items: |-
                    =// ForAll(Parent.MenuItems, Value), EDSIconMenu.MenuItems) // When using object array notation [] instead of Table()
                    colTopBarMenu
                LayoutMinHeight: =48
                LayoutMinWidth: =320
                OnSelect: |
                    =Switch(
                        Lower(ThisItem.Action),
                        "navigate",
                        Navigate(
                            ThisItem.Option.Screen,
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "Transition"
                            ).Value
                        ),
                        "launch",
                        Launch(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "address"
                            ).Value
                        ),
                        "notify",
                        Notify(
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "text"
                                ).Value,
                                //ThisItem.Option.Text,// fallback to the main option property instead of using lookup.
                                "Change this formula to what you wish, you can also provide a custom option"
                            ),
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "notification_type"
                                ).Value,
                                NotificationType.Information
                            ),
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "timeout"
                            ).Value
                        ),
                        "return",
                        Back(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "transition"
                            ).Value
                        ),
                        false
                    );
                ShowScrollbar: =false
                TabIndex: =0
                TemplatePadding: =0
                TemplateSize: |-
                    =//EDSDefaults.TemplateSize+(EDSDefaults.FocusedBorderThickness*2)
                    EDSStyles.IconMenu.TemplateSize
                Width: =hcoHorizontalMenuItemMTS.Width*CountRows(Self.AllItems)+(EDSDefaults.FocusedBorderThickness*2)
                WrapCount: =0
                X: =0 
                ZIndex: =8

                hcoHorizontalMenuItemMTS As groupContainer.horizontalAutoLayoutContainer:
                    BorderColor: =Color.Transparent
                    BorderStyle: =BorderStyle
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =2
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =2
                    Width: =Parent.TemplateWidth
                    ZIndex: =1

                    icoHorizontalMenuItemMTS As image:
                        AccessibleLabel: =$"Button for {Self.Tooltip}"
                        BorderColor: =Color.Transparent
                        BorderStyle: =BorderStyle.Dashed
                        BorderThickness: =EDSDefaults.BorderThickness
                        DisabledBorderColor: =EDSDefaults.DisabledBorderColor
                        DisabledFill: =EDSDefaults.DisabledFill
                        Fill: =EDSStyles.Icon.Fill
                        FillPortions: =1
                        FocusedBorderColor: =EDSDefaults.FocusedBorderColor
                        Height: =EDSStyles.Icon.Height
                        HoverBorderColor: |
                            =//EDSDataTable.Styling.Defaults.HoverBorderColor
                        HoverFill: =EDSDefaults.IconHoverFill
                        Image: =ThisItem.Icon
                        LayoutMinHeight: =0
                        LayoutMinWidth: =0
                        OnSelect: |
                            =Switch(
                                Lower(ThisItem.Action),
                                "navigate",
                                Navigate(ThisItem.Option.Screen),
                                "launch",
                                Launch(
                                    LookUp(
                                        ThisItem.Option.Arguments,
                                        Name = "Url"
                                    ).Value
                                ),
                                "notify",
                                Notify(
                                    Concatenate(
                                        "Change this formula to what you wish, you can also provide a custom option ",
                                        Coalesce(
                                            LookUp(
                                                ThisItem.Option.Arguments,
                                                Name = "NotificationText"
                                            ).Value
                                        )
                                    ),
                                    LookUp(
                                        ThisItem.Option.Arguments,
                                        Name = "NotificationType"
                                    ).Value
                                ),
                                "return",
                                Back(
                                    LookUp(
                                        ThisItem.Option.Arguments,
                                        Name = "ScreenTransition"
                                    ).Value
                                ),
                                false
                            );
                        PaddingBottom: =EDSDefaults.IconButtonPadding
                        PaddingLeft: =EDSDefaults.IconButtonPadding
                        PaddingRight: =EDSDefaults.IconButtonPadding
                        PaddingTop: =EDSDefaults.IconButtonPadding
                        PressedBorderColor: =EDSDefaults.PressedBorderColor
                        PressedFill: =Self.HoverFill
                        RadiusBottomLeft: =Self.RadiusTopLeft
                        RadiusBottomRight: =Self.RadiusTopLeft
                        RadiusTopLeft: =Self.Height/2
                        RadiusTopRight: =Self.RadiusTopLeft
                        TabIndex: =0
                        Tooltip: =ThisItem.Title &" - "& ThisItem.SubTitle
                        Width: =Self.Height
                        ZIndex: =1

        htmIssueDetailsMTS As htmlViewer:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =EDSStyles.HtmlText.BorderColor
            BorderStyle: =EDSStyles.HtmlText.BorderStyle
            BorderThickness: =EDSStyles.HtmlText.BorderThickness
            Color: =EDSStyles.HtmlText.Color
            DisabledBorderColor: =EDSStyles.HtmlText.DisabledBorderColor
            DisabledFill: =EDSStyles.HtmlText.DisabledFill
            Fill: =EDSStyles.HtmlText.Fill
            Font: =EDSStyles.HtmlText.Font
            Height: =48
            HoverBorderColor: =EDSStyles.HtmlText.HoverBorderColor
            HtmlText: |-
                =With(
                    {
                        IssueTasks: Filter(
                            'Living Quarter Maintenance Tasks',
                            ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID
                        ),
                        Tag: Substitute(
                            locActiveIssueReport.'Functional location',
                            $"{gblActivePlant.sapPlantId}-",
                            ""
                        )
                    },
                    With(
                        {
                            CompletedTaskCount: CountIf(
                                IssueTasks,
                                ThisRecord.Progress = 100
                            ),
                            TasksInProgressCount: CountIf(
                                IssueTasks,
                                ThisRecord.Progress < 100
                            ),
                            IssueDisciplines: Concat(
                                Distinct(IssueTasks, ThisRecord.Discipline),
                                ThisRecord.Value, ", "
                            ),
                            FunctionalLocation: locActiveIssueReport.'Functional location',
                            FunctionalLocationUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}",
                            FailureReportUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view/m2/{locActiveIssueReport.FailureReport}"
                        },
                        $"<center>
                Functional Location: <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{FunctionalLocationUrl}'>{FunctionalLocation}</a></font></b> | 
                M2: <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{FailureReportUrl}'>{locActiveIssueReport.FailureReport}</a></font></b><br>
                "
                    )
                )
            LayoutMinHeight: =100
            PaddingBottom: =EDSStyles.HtmlText.PaddingBottom
            PaddingLeft: =EDSStyles.HtmlText.PaddingLeft
            PaddingRight: =EDSStyles.HtmlText.PaddingRight
            PaddingTop: =EDSStyles.HtmlText.PaddingTop
            Size: =EDSStyles.HtmlText.FontSize
            Width: =EDSStyles.HtmlText.Width
            X: =16
            Y: =16
            ZIndex: =2

        vcoContentMTS As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =EDSColors.Background.Light
            Height: =225
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutGap: =EDSDefaults.LayoutGap
            LayoutMinHeight: =EDSDefaults.LayoutMinHeight
            LayoutMinWidth: =EDSDefaults.LayoutMinWidth
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            LayoutWrap: |-
                =//(App.ActiveScreen.Size < ScreenSize.Medium)
                true
            PaddingBottom: =16
            PaddingLeft: =16
            PaddingRight: =16
            PaddingTop: =16
            ZIndex: =4

            vcoIssueTasksSectionMTS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.Light
                Fill: =EDSColors.Background.Default
                Height: |-
                    =//Max(EDSStyles.Gallery.LayoutMinHeight, (Parent.Height-Self.Y*4))
                    480
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =8
                LayoutMinHeight: =100
                LayoutMinWidth: =343
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =4
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =4
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Visible: =!locIssueReportFocused
                Width: =343
                X: =40
                Y: =40
                ZIndex: =1

                hcoIssueTaskItemsActionsHeaderMTS As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =36
                    LayoutGap: =4
                    LayoutMinHeight: =36
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    ZIndex: =1

                    btnReturnToIssueScreenMTS As Button:
                        AccessibleLabel: ="Button that opens the issue in the issue reports screen"
                        Appearance: ='ButtonCanvas.Appearance'.Outline
                        BasePaletteColor: =
                        DisplayMode: =If(frmSelectedIssueTaskItemMTS.Mode <> FormMode.View, DisplayMode.Disabled, DisplayMode.Edit)
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Navigate('Issue Report Screen', ScreenTransition.None, {locActiveIssueReport: locActiveIssueReport})
                        Text: ="Return to issue"
                        Width: =140
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "tabIssueTaskDisciplinesMTS As 'Tab list'.pcfdataset":
                        AccessibleLabel: ="Tab choice for issue types to display task discipline in the task list (filter)"
                        BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontColor: =EDSColors.Static.Default
                        Height: =36
                        Items: =Distinct(Filter('Living Quarter Maintenance Tasks', ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID), Discipline)
                        LayoutMinHeight: =55
                        LayoutMinWidth: =180
                        Size: ='TabList.Size'.Small
                        Visible: |-
                            =//CountA(Distinct(Filter('Living Quarter Maintenance Tasks', ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID), Discipline)) > 1
                            true
                        Width: =280
                        X: =0
                        Y: =0
                        ZIndex: =2

                    icoIssueRegistrationRecordStatusMTS As image:
                        AccessibleLabel: ="Icon indicating the issue report status (active/inactive)"
                        AlignInContainer: =AlignInContainer.Center
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =
                        FocusedBorderThickness: =4
                        Height: =24
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Image: =If(locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active, EDSIcons.FocusCenter, EDSIcons.Lock)
                        LayoutMinHeight: =24
                        LayoutMinWidth: =64
                        PaddingLeft: =4
                        PaddingRight: =4
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        TabIndex: =0
                        Visible: =locActiveIssueReport.Status <> 'Status (Issue Registrations)'.Active
                        Width: =24
                        ZIndex: =3

                    lblIssueRegistrationRecordStatusMTS As label:
                        AlignInContainer: =AlignInContainer.Center
                        BorderColor: =EDSStyles.Label.BorderColor
                        BorderStyle: =EDSStyles.Label.BorderStyle
                        BorderThickness: =EDSStyles.Label.BorderThickness
                        Color: =EDSColors.Interactive.Danger.Text
                        DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                        DisabledColor: =EDSStyles.Label.DisabledColor
                        DisabledFill: =EDSStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =Color.Transparent
                        FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                        Font: =EDSFonts.Paragraph.Meta.Font
                        FontWeight: =FontWeight.Bold
                        Height: =20
                        HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                        HoverColor: =EDSStyles.Label.HoverColor
                        HoverFill: =EDSStyles.DataTable.HeadingHoverFill
                        LayoutMinHeight: =EDSStyles.Label.LayoutMinHeight
                        LayoutMinWidth: =EDSStyles.Label.LayoutMinWidth
                        LineHeight: =EDSFonts.Paragraph.Meta.LineHeight
                        PaddingBottom: =0
                        PaddingLeft: =EDSStyles.Label.PaddingLeft
                        PaddingRight: =EDSStyles.Label.PaddingRight
                        PaddingTop: =0
                        PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                        PressedColor: =EDSStyles.Label.PressedColor
                        PressedFill: =EDSStyles.Label.PressedFill
                        Size: =EDSFonts.Paragraph.Meta.Size
                        Text: |-
                            =$"Issue status: {locActiveIssueReport.Status}"
                        VerticalAlign: =VerticalAlign.Bottom
                        Visible: =locActiveIssueReport.Status = 'Status (Issue Registrations)'.Inactive
                        Width: =120
                        ZIndex: =4

                    btnCreateNewIssueRegistrationTaskMTS As Button:
                        AccessibleLabel: ="Button that initiates creation of a new task for the selected issue registration"
                        Appearance: =If(galIssueTaskTableMTS.AllItemsCount = 0,  'ButtonCanvas.Appearance'.Primary ,'ButtonCanvas.Appearance'.Outline)
                        BasePaletteColor: =
                        DisplayMode: =If(Or(frmSelectedIssueTaskItemMTS.Mode <> FormMode.View, Text(locActiveIssueReport.Status) = Text('Status (Issue Registrations)'.Inactive)), DisplayMode.Disabled, DisplayMode.Edit)
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =NewForm(frmSelectedIssueTaskItemMTS);
                            //UpdateContext({locShowIssueReportTaskForm: true})
                        Text: ="New task"
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =5

                vcoIssueTaskTableMTS As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderColor: =EDSColors.Background.Medium
                    BorderThickness: =1
                    DropShadow: =DropShadow.None
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =260
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: |-
                        =//And(!locShowIssueReportTaskForm, galIssueTasksMTS.AllItemsCount>0)
                        true
                    ZIndex: =3

                    hcoIssueTaskTableHeaderMTS As groupContainer.horizontalAutoLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Fill: =EDSStyles.DataTable.HeadingFill
                        FillPortions: =0
                        Height: =EDSStyles.DataTable.HeadingHeight
                        LayoutAlignItems: =LayoutAlignItems.Center
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =EDSStyles.Menu.PaddingBottom//
                        PaddingRight: |-
                            =//EDSStyles.Menu.PaddingRight
                            0
                        PaddingTop: =EDSStyles.Menu.PaddingTop
                        Width: =galIssueTaskTableMTS.Width
                        ZIndex: =1

                        vcoIssueTasksColumnHeaderSelectAllMTS As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =EDSStyles.DataTable.HeadingHeight
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                            LayoutMinHeight: =EDSStyles.DataTable.HeadingHeight
                            LayoutMinWidth: =Self.Width
                            LayoutMode: =LayoutMode.Auto
                            Visible: =false
                            Width: =EDSStyles.Menu.IconWidth+EDSStyles.DataTable.PaddingLeft+EDSStyles.DataTable.PaddingRight
                            ZIndex: =1

                            icoIssueTasksTableItemCheckboxSelectAllMTS As image:
                                AccessibleLabel: ="A checkbox to select or deselect all issue registrations in the issue registration list"
                                BorderColor: =EDSDefaults.BorderColor
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =EDSDefaults.BorderThickness
                                DisabledFill: =Color.Transparent
                                FillPortions: =1
                                FocusedBorderColor: =
                                Height: =48
                                HoverFill: =Self.Fill
                                Image: |-
                                    =/*
                                    If(
                                        CountRows(colGallerySelected) = CountRows(galIssueTasksMTS.AllItems),
                                        EDSIcons.Checkbox,
                                        EDSIcons.CheckboxOutline
                                    )
                                    // TODO: improve all-items check.
                                    */
                                LayoutMinHeight: =0
                                LayoutMinWidth: =Parent.Width
                                OnSelect: |-
                                    =false
                                    /*
                                    If(
                                        CountRows(colGallerySelected) = CountRows(galIssueTasksMTS.AllItems),
                                        Clear(colGallerySelected),
                                        ClearCollect(
                                            colGallerySelected,
                                            galIssueTasksMTS.AllItems
                                        )
                                    )
                                    */
                                PaddingBottom: =EDSStyles.Menu.IconPaddingBottom
                                PaddingLeft: =EDSStyles.DataTable.PaddingLeft
                                PaddingRight: =EDSStyles.DataTable.PaddingRight
                                PaddingTop: =EDSStyles.Menu.IconPaddingTop
                                TabIndex: =0
                                Tooltip: |-
                                    ="Attention: remember to change the collection to use in the select all!" //"Select all"
                                Width: =EDSStyles.Menu.IconWidth+Self.PaddingLeft+Self.PaddingRight
                                X: =EDSStyles.DataTable.PaddingLeft
                                ZIndex: =1

                            shpIssueTaskHeaderBorderSelectAllMTS As rectangle:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: |-
                                    =If(
                                        false,
                                        EDSDefaults.BorderColor,
                                        EDSColors.Background.Medium
                                    )
                                FocusedBorderThickness: =4
                                Height: =EDSStyles.Tabs.BorderThickness
                                HoverFill: =RGBA(105, 121, 126, 1)
                                LayoutMinWidth: =Parent.Width
                                PressedFill: =RGBA(105, 121, 126, 1)
                                Width: =Parent.Width
                                ZIndex: =2

                        vcoIssueTaskColumnHeaderEndMTS As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            Height: =EDSStyles.DataTable.HeadingHeight
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutJustifyContent: =LayoutJustifyContent.End
                            LayoutMinHeight: =EDSStyles.DataTable.HeadingHeight
                            LayoutMinWidth: =0
                            LayoutMode: =LayoutMode.Auto
                            Width: =EDSStyles.Menu.IconWidth+EDSStyles.DataTable.PaddingLeft+EDSStyles.DataTable.PaddingRight
                            ZIndex: =5

                            lblIssueTaskColumnHeaderTitleMTS As label:
                                Align: =Align.Center
                                BorderColor: =EDSStyles.Label.BorderColor
                                BorderStyle: =EDSStyles.Label.BorderStyle
                                BorderThickness: =EDSStyles.Label.BorderThickness
                                Color: =EDSStyles.Label.Color
                                DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                                DisabledColor: =EDSStyles.Label.DisabledColor
                                DisabledFill: =EDSStyles.Label.DisabledFill
                                Fill: =Color.Transparent
                                FillPortions: =1
                                FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                                FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                                Font: =EDSStyles.DataTable.Heading.Font
                                FontWeight: =EDSStyles.DataTable.Heading.FontWeight
                                Height: =EDSStyles.Label.Height
                                HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                                HoverColor: =EDSStyles.Label.HoverColor
                                HoverFill: =EDSStyles.DataTable.HeadingHoverFill
                                LayoutMinHeight: =EDSStyles.Label.LayoutMinHeight
                                LayoutMinWidth: =EDSStyles.Label.LayoutMinWidth
                                LineHeight: =EDSFonts.Heading.H5.LineHeight
                                PaddingBottom: =EDSStyles.Label.PaddingBottom
                                PaddingLeft: =EDSStyles.Label.PaddingLeft
                                PaddingRight: =EDSStyles.Label.PaddingRight
                                PaddingTop: =EDSStyles.Label.PaddingTop
                                PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                                PressedColor: =EDSStyles.Label.PressedColor
                                PressedFill: =EDSStyles.Label.PressedFill
                                Size: =EDSStyles.DataTable.Heading.FontSize
                                Text: =$"{tabIssueTaskDisciplinesMTS.Selected.Value} tasks"
                                Width: =EDSStyles.Label.Width
                                ZIndex: =1

                            shpIssueTaskColumnHeaderBorderEndMTS As rectangle:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: |-
                                    =If(
                                        false,
                                        EDSDefaults.BorderColor,
                                        EDSColors.Background.Medium
                                    )
                                FocusedBorderThickness: =4
                                Height: =EDSStyles.Tabs.BorderThickness
                                HoverFill: =RGBA(105, 121, 126, 1)
                                LayoutMinWidth: =Parent.Width
                                PressedFill: =RGBA(105, 121, 126, 1)
                                Width: =Parent.Width
                                ZIndex: =2

                    galIssueTaskTableMTS As gallery.galleryVertical:
                        AccessibleLabel: ="A list of tasks associated with the selected issue registration."
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =EDSDefaults.BorderColor
                        BorderStyle: =EDSDefaults.BorderStyle
                        BorderThickness: =EDSDefaults.BorderThickness
                        Fill: |-
                            =//EDSStyles.Menu.Fill
                            Color.Transparent
                        FocusedBorderThickness: =EDSDefaults.FocusedBorderThickness
                        Height: =EDSStyles.Gallery.Height
                        Items: =Filter('Living Quarter Maintenance Tasks', ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID, Discipline = tabIssueTaskDisciplinesMTS.Selected.Value)
                        Layout: =Layout.Vertical
                        LayoutMinHeight: |-
                            =//Min(EDSStyles.Gallery.LayoutMinHeight, Self.TemplateHeight*CountRows(Self.AllItems))
                            100
                        LayoutMinWidth: =EDSDefaults.LayoutMinWidth
                        LoadingSpinner: =LoadingSpinner.Data
                        LoadingSpinnerColor: =EDSDefaults.LoadingSpinnerColor
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locActiveIssueReportTask: ThisItem,
                                    //locShowIssueReportTaskForm: true,
                                    locActiveTaskSection: "General"
                                }
                            );
                        TabIndex: =0
                        TemplateFill: |-
                            =If(
                                locActiveIssueReportTask.ActivityGUID = ThisItem.ActivityGUID,
                                EDSStyles.Menu.ActiveFill,
                                Color.Transparent
                            )
                        TemplatePadding: =8
                        TemplateSize: =200
                        Width: =EDSStyles.Gallery.Width
                        X: =EDSStyles.Menu.Margin
                        Y: =EDSStyles.Menu.Margin+8
                        ZIndex: =2

                        conIssueTaskItemLayoutMTS As groupContainer.horizontalAutoLayoutContainer:
                            BorderColor: =EDSColors.Background.Medium
                            BorderThickness: =1
                            Fill: =Color.Transparent
                            Height: =Parent.TemplateHeight
                            LayoutAlignItems: =LayoutAlignItems.Center
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.TemplateWidth
                            ZIndex: =1

                            conIssueTaskTitleMTS_3 As groupContainer.verticalAutoLayoutContainer:
                                DropShadow: =DropShadow.None
                                Height: =90
                                LayoutAlignItems: =LayoutAlignItems.Stretch
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =8
                                PaddingLeft: =8
                                PaddingRight: =8
                                PaddingTop: =8
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =100
                                ZIndex: =1

                                conIssueTaskTitleMTS As groupContainer.verticalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    DropShadow: =DropShadow.None
                                    FillPortions: =0
                                    Height: =32
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutJustifyContent: =LayoutJustifyContent.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =100
                                    LayoutMode: =LayoutMode.Auto
                                    RadiusBottomLeft: =0
                                    RadiusBottomRight: =0
                                    RadiusTopLeft: =0
                                    RadiusTopRight: =0
                                    Width: =100
                                    ZIndex: =1

                                    imgIssueTaskImageMTS As image:
                                        AccessibleLabel: =$"Issue task icon that indicates its progress status ({ThisItem.Progress} %)"
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        BorderStyle: =BorderStyle.None
                                        BorderThickness: =2
                                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        FocusedBorderThickness: =4
                                        Height: =32
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Image: =If(ThisItem.Progress = 100, EDSIcons.AssignmentTurnedIn, EDSIcons.Assignment)
                                        LayoutMinHeight: =24
                                        OnSelect: =Select(shpIssueTaskItemOverlayMTS)
                                        PaddingBottom: =4
                                        PaddingLeft: =4
                                        PaddingRight: =4
                                        PaddingTop: =4
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        TabIndex: =0
                                        Width: =32
                                        ZIndex: =1

                                    lblIssueTaskTitleMTS As label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        BorderColor: =EDSStyles.Label.BorderColor
                                        BorderStyle: =EDSStyles.Label.BorderStyle
                                        BorderThickness: =EDSStyles.Label.BorderThickness
                                        Color: =EDSStyles.Label.Color
                                        DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                                        DisabledColor: =EDSStyles.Label.DisabledColor
                                        DisabledFill: =EDSStyles.Label.DisabledFill
                                        DisplayMode: =DisplayMode.View
                                        Fill: =Color.Transparent
                                        FillPortions: =1
                                        FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                                        FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                                        Font: =EDSStyles.Label.Font
                                        FontWeight: =EDSFonts.Heading.H4.Weight
                                        Height: =EDSStyles.Label.Height
                                        HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                                        HoverColor: =EDSStyles.Label.HoverColor
                                        HoverFill: =EDSStyles.Label.HoverFill
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        LineHeight: =EDSFonts.Heading.H4.LineHeight
                                        OnSelect: =Select(shpIssueTaskItemOverlayMTS)
                                        PaddingBottom: =2
                                        PaddingLeft: =EDSStyles.Label.PaddingLeft
                                        PaddingRight: =EDSStyles.Label.PaddingRight
                                        PaddingTop: =2
                                        PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                                        PressedColor: =EDSStyles.Label.PressedColor
                                        PressedFill: =EDSStyles.Label.PressedFill
                                        Size: =EDSFonts.Heading.H6.Size
                                        TabIndex: =0
                                        Text: =ThisItem.Title
                                        Width: =100
                                        X: =16
                                        Y: =16
                                        ZIndex: =2

                                lblIssueTaskDescriptionMTS As label:
                                    BorderColor: =EDSStyles.Label.BorderColor
                                    BorderStyle: =EDSStyles.Label.BorderStyle
                                    BorderThickness: =EDSStyles.Label.BorderThickness
                                    Color: =EDSStyles.Label.Color
                                    DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                                    DisabledColor: =EDSStyles.Label.DisabledColor
                                    DisabledFill: =EDSStyles.Label.DisabledFill
                                    DisplayMode: =DisplayMode.View
                                    Fill: =Color.Transparent
                                    FillPortions: =1
                                    FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                                    Font: =EDSStyles.Label.Font
                                    FontWeight: =EDSStyles.Label.FontWeight
                                    Height: =EDSStyles.Label.Height
                                    HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                                    HoverColor: =EDSStyles.Label.HoverColor
                                    HoverFill: =EDSStyles.Label.HoverFill
                                    LayoutMinWidth: =200
                                    PaddingBottom: =EDSStyles.Label.PaddingBottom
                                    PaddingLeft: =EDSStyles.Label.PaddingLeft
                                    PaddingRight: =EDSStyles.Label.PaddingRight
                                    PaddingTop: =EDSStyles.Label.PaddingTop
                                    PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                                    PressedColor: =EDSStyles.Label.PressedColor
                                    PressedFill: =EDSStyles.Label.PressedFill
                                    Size: =10
                                    Text: =ThisItem.Description
                                    VerticalAlign: =VerticalAlign.Top
                                    Width: =200
                                    X: =16
                                    Y: =16
                                    ZIndex: =2

                                "prgIssueTaskProgressIndicatorMTS As 'Progress Bar'":
                                    AccessibleLabel: =$"A progress indicator for the task ({ThisItem.Progress}%)"
                                    BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =16
                                    LayoutMinHeight: =45
                                    LayoutMinWidth: =100
                                    Thickness: ='Progress.Thickness'.Large
                                    Value: =ThisItem.Progress
                                    Width: =100
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            conTaskStartEndTimesMTS As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                DropShadow: =DropShadow.None
                                Fill: =EDSColors.Background.Default
                                FillPortions: =0
                                LayoutAlignItems: =LayoutAlignItems.Stretch
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =4
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =8
                                PaddingLeft: =8
                                PaddingRight: =8
                                PaddingTop: =8
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =120
                                ZIndex: =2

                                icoCopyIssueTaskDeepLinkMTS As image:
                                    AccessibleLabel: =$"A icon button that copies a deep link that opens this app with this task selected in fullscreen / focus mode and with the selected section ({locActiveTaskSection})"
                                    AlignInContainer: =AlignInContainer.Center
                                    BorderColor: =EDSStyles.Icon.BorderColor
                                    BorderStyle: =EDSStyles.Icon.BorderStyle
                                    BorderThickness: =EDSStyles.Icon.BorderThickness+1
                                    DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                                    DisabledFill: =EDSStyles.Icon.DisabledFill
                                    Fill: =EDSDefaults.IconBackground
                                    FocusedBorderColor: =EDSStyles.Icon.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                                    Height: =36
                                    HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                                    HoverFill: =EDSStyles.Icon.HoverFill
                                    Image: =EDSIcons.Link
                                    LayoutMinHeight: =EDSStyles.Icon.Height
                                    OnSelect: |-
                                        =Copy($"https://apps.equinor.com/lqiam/?taskId={ThisItem.ActivityGUID}&taskSection={locActiveTaskSection}");
                                        Notify($"A deeplink to this task in the selected section ({locActiveTaskSection}) has been copied to the clipboard!", NotificationType.Success);
                                    PaddingBottom: =6
                                    PaddingLeft: =6
                                    PaddingRight: =6
                                    PaddingTop: =6
                                    PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                                    PressedFill: =EDSStyles.Icon.PressedFill
                                    RadiusBottomLeft: =Self.Height/2
                                    RadiusBottomRight: =Self.Height/2
                                    RadiusTopLeft: =Self.Height/2
                                    RadiusTopRight: =Self.Height/2
                                    TabIndex: =0
                                    Tooltip: ="Copy a link to open this issue"
                                    Width: =36
                                    ZIndex: =1

                                lblIssueTaskStartDateTimeMTS As label:
                                    Align: =Align.Center
                                    BorderColor: =EDSStyles.Label.BorderColor
                                    BorderStyle: =EDSStyles.Label.BorderStyle
                                    BorderThickness: =EDSStyles.Label.BorderThickness
                                    Color: =EDSStyles.Label.Color
                                    DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                                    DisabledColor: =EDSStyles.Label.DisabledColor
                                    DisabledFill: =EDSStyles.Label.DisabledFill
                                    DisplayMode: =DisplayMode.View
                                    Fill: =Color.Transparent
                                    FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                                    Font: =EDSFonts.Paragraph.Meta.Font
                                    FontWeight: =EDSFonts.Paragraph.Meta.Weight
                                    Height: =20
                                    HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                                    HoverColor: =EDSStyles.Label.HoverColor
                                    HoverFill: =EDSStyles.DataTable.HeadingHoverFill
                                    LayoutMinHeight: =EDSStyles.Label.LayoutMinHeight
                                    LayoutMinWidth: =EDSStyles.Label.LayoutMinWidth
                                    LineHeight: =EDSFonts.Paragraph.Meta.LineHeight
                                    PaddingBottom: =0
                                    PaddingLeft: =EDSStyles.Label.PaddingLeft
                                    PaddingRight: =EDSStyles.Label.PaddingRight
                                    PaddingTop: =0
                                    PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                                    PressedColor: =EDSStyles.Label.PressedColor
                                    PressedFill: =EDSStyles.Label.PressedFill
                                    Size: =EDSFonts.Paragraph.Meta.Size
                                    Text: ="Planned Start"
                                    VerticalAlign: =VerticalAlign.Bottom
                                    Width: =EDSStyles.Label.Width
                                    ZIndex: =2

                                "dtpIssueTaskStartDateMTS As 'Date picker'":
                                    AccessibleLabel: ="A datepicker for the planned start of this task"
                                    BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                    DisplayMode: |-
                                        =If(
                                            IsBlank(ThisItem.ActivityGUID),
                                            DisplayMode.Disabled,
                                            If(
                                                RecordInfo(
                                                    ThisItem,
                                                    RecordInfo.EditPermission
                                                ),
                                                DisplayMode.Edit,
                                                DisplayMode.View
                                            )
                                        )
                                    Font: =Font.Lato
                                    FontColor: =EDSColors.Static.Default
                                    FontSize: =12
                                    FontWeight: =FontWeight.Normal
                                    Format: ='DatePickerCanvas.Format'.Short
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =100
                                    OnChange: |-
                                        =Patch('Living Quarter Maintenance Tasks', ThisItem, {'Start Date': Self.SelectedDate})
                                    SelectedDate: =ThisItem.'Start Date'
                                    Width: =48
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                                lblIssueTaskEndDateTimeMTS As label:
                                    Align: =Align.Center
                                    BorderColor: =EDSStyles.Label.BorderColor
                                    BorderStyle: =EDSStyles.Label.BorderStyle
                                    BorderThickness: =EDSStyles.Label.BorderThickness
                                    Color: =EDSStyles.Label.Color
                                    DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                                    DisabledColor: =EDSStyles.Label.DisabledColor
                                    DisabledFill: =EDSStyles.Label.DisabledFill
                                    DisplayMode: =DisplayMode.View
                                    Fill: =Color.Transparent
                                    FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                                    Font: =EDSFonts.Paragraph.Meta.Font
                                    FontWeight: =EDSFonts.Paragraph.Meta.Weight
                                    Height: =20
                                    HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                                    HoverColor: =EDSStyles.Label.HoverColor
                                    HoverFill: =EDSStyles.DataTable.HeadingHoverFill
                                    LayoutMinHeight: =EDSStyles.Label.LayoutMinHeight
                                    LayoutMinWidth: =EDSStyles.Label.LayoutMinWidth
                                    LineHeight: =EDSFonts.Paragraph.Meta.LineHeight
                                    PaddingBottom: =0
                                    PaddingLeft: =EDSStyles.Label.PaddingLeft
                                    PaddingRight: =EDSStyles.Label.PaddingRight
                                    PaddingTop: =0
                                    PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                                    PressedColor: =EDSStyles.Label.PressedColor
                                    PressedFill: =EDSStyles.Label.PressedFill
                                    Size: =EDSFonts.Paragraph.Meta.Size
                                    Text: ="Planned Completion"
                                    VerticalAlign: =VerticalAlign.Bottom
                                    Width: =EDSStyles.Label.Width
                                    ZIndex: =4

                                "dtpIssueTaskEndDateMTS As 'Date picker'":
                                    AccessibleLabel: ="A datepicker for the planned completion of this task"
                                    BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                    DisplayMode: |-
                                        =If(
                                            IsBlank(ThisItem.ActivityGUID),
                                            DisplayMode.Disabled,
                                            If(
                                                RecordInfo(
                                                    ThisItem,
                                                    RecordInfo.EditPermission
                                                ),
                                                DisplayMode.Edit,
                                                DisplayMode.View
                                            )
                                        )
                                    Font: =Font.Lato
                                    FontColor: =EDSColors.Static.Default
                                    FontSize: =12
                                    FontWeight: =FontWeight.Normal
                                    Format: ='DatePickerCanvas.Format'.Short
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =100
                                    OnChange: |-
                                        =Patch('Living Quarter Maintenance Tasks', ThisItem, {'End Date': Self.SelectedDate})
                                    SelectedDate: =ThisItem.'End Date'
                                    Width: =48
                                    X: =0
                                    Y: =0
                                    ZIndex: =5

                            conDisciplineSwitchMTS As groupContainer.verticalAutoLayoutContainer:
                                DropShadow: =DropShadow.None
                                Fill: =EDSColors.Background.Default
                                FillPortions: =0
                                Height: =100
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutJustifyContent: =LayoutJustifyContent.Center
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                RadiusBottomLeft: =0
                                RadiusBottomRight: =0
                                RadiusTopLeft: =0
                                RadiusTopRight: =0
                                Width: =48
                                ZIndex: =4

                                icoFacilityManagementSettingsMTS As image:
                                    AccessibleLabel: ="A icon button to set the active task section to 'General'"
                                    BorderColor: =EDSStyles.Icon.BorderColor
                                    BorderStyle: =EDSStyles.Icon.BorderStyle
                                    BorderThickness: =EDSStyles.Icon.BorderThickness+1
                                    DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                                    DisabledFill: =EDSStyles.Icon.DisabledFill
                                    Fill: =If(And(locActiveIssueReportTask.ActivityGUID = ThisItem.ActivityGUID, locActiveTaskSection = "General"), Self.HoverFill, EDSDefaults.IconBackground)
                                    FocusedBorderColor: =EDSStyles.Icon.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                                    Height: =36
                                    HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                                    HoverFill: =EDSStyles.Icon.HoverFill
                                    Image: =EDSIcons.Platform
                                    LayoutMinHeight: =EDSStyles.Icon.Height
                                    OnSelect: |-
                                        =UpdateContext(
                                            {
                                                locPreviewNotificationBody:false,
                                                locActiveIssueReportTask: ThisItem,
                                                locActiveTaskSection: "General"
                                            }
                                        );
                                        ResetForm(frmSelectedIssueTaskItemMTS);
                                        If(
                                            And(locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active, DataSourceInfo('Issue Registrations', DataSourceInfo.EditPermission)),
                                            //EditForm(frmIssueRegistrationTaskMTS),
                                            ViewForm(frmSelectedIssueTaskItemMTS)
                                        )
                                    PaddingBottom: =6
                                    PaddingLeft: =6
                                    PaddingRight: =6
                                    PaddingTop: =6
                                    PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                                    PressedFill: =EDSStyles.Icon.PressedFill
                                    RadiusBottomLeft: =Self.Height/2
                                    RadiusBottomRight: =Self.Height/2
                                    RadiusTopLeft: =Self.Height/2
                                    RadiusTopRight: =Self.Height/2
                                    TabIndex: =0
                                    Tooltip: ="General task information."
                                    Width: =36
                                    ZIndex: =1

                                icoDisciplineSettingsMTS As image:
                                    AccessibleLabel: ="A icon button to set the active task section to 'Discipline'"
                                    BorderColor: =EDSStyles.Icon.BorderColor
                                    BorderStyle: =EDSStyles.Icon.BorderStyle
                                    BorderThickness: =EDSStyles.Icon.BorderThickness+1
                                    DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                                    DisabledFill: =EDSStyles.Icon.DisabledFill
                                    Fill: =If(And(locActiveIssueReportTask.ActivityGUID = ThisItem.ActivityGUID, locActiveTaskSection = "Discipline"), Self.HoverFill, EDSDefaults.IconBackground)
                                    FocusedBorderColor: =EDSStyles.Icon.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                                    Height: =36
                                    HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                                    HoverFill: =EDSStyles.Icon.HoverFill
                                    Image: =EDSIcons.ToolboxWheel
                                    LayoutMinHeight: =EDSStyles.Icon.Height
                                    OnSelect: |-
                                        =UpdateContext(
                                            {
                                                locPreviewNotificationBody:false,
                                                locActiveIssueReportTask: ThisItem,
                                                locActiveTaskSection: "Discipline"
                                            }
                                        );
                                        ResetForm(frmSelectedIssueTaskItemMTS);
                                        If(
                                            And(locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active, RecordInfo(locActiveIssueReportTask, RecordInfo.EditPermission)),
                                            //EditForm(frmIssueRegistrationTaskMTS),
                                            ViewForm(frmSelectedIssueTaskItemMTS)
                                        )
                                    PaddingBottom: =6
                                    PaddingLeft: =6
                                    PaddingRight: =6
                                    PaddingTop: =6
                                    PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                                    PressedFill: =EDSStyles.Icon.PressedFill
                                    RadiusBottomLeft: =Self.Height/2
                                    RadiusBottomRight: =Self.Height/2
                                    RadiusTopLeft: =Self.Height/2
                                    RadiusTopRight: =Self.Height/2
                                    TabIndex: =0
                                    Tooltip: ="Task information related to discipline."
                                    Width: =36
                                    ZIndex: =2

                                icoTaskStatusMTS As image:
                                    AccessibleLabel: ="A icon button to set the active task section to 'Work'"
                                    BorderColor: =EDSStyles.Icon.BorderColor
                                    BorderStyle: =EDSStyles.Icon.BorderStyle
                                    BorderThickness: =EDSStyles.Icon.BorderThickness+1
                                    DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                                    DisabledFill: =EDSStyles.Icon.DisabledFill
                                    Fill: =If(And(locActiveIssueReportTask.ActivityGUID = ThisItem.ActivityGUID, locActiveTaskSection = "Work"), Self.HoverFill, EDSDefaults.IconBackground)
                                    FocusedBorderColor: =EDSStyles.Icon.FocusedBorderColor
                                    FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                                    Height: =36
                                    HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                                    HoverFill: =EDSStyles.Icon.HoverFill
                                    Image: =EDSIcons.BuildWrench
                                    LayoutMinHeight: =EDSStyles.Icon.Height
                                    OnSelect: |-
                                        =UpdateContext(
                                            {
                                                locPreviewNotificationBody:false,
                                                locActiveIssueReportTask: ThisItem,
                                                locActiveTaskSection: "Work"
                                            }
                                        );
                                        ResetForm(frmSelectedIssueTaskItemMTS);
                                        If(
                                            And(locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active, RecordInfo(locActiveIssueReportTask, RecordInfo.EditPermission)),
                                            EditForm(frmSelectedIssueTaskItemMTS),
                                            ViewForm(frmSelectedIssueTaskItemMTS)
                                        )
                                    PaddingBottom: =6
                                    PaddingLeft: =6
                                    PaddingRight: =6
                                    PaddingTop: =6
                                    PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                                    PressedFill: =EDSStyles.Icon.PressedFill
                                    RadiusBottomLeft: =Self.Height/2
                                    RadiusBottomRight: =Self.Height/2
                                    RadiusTopLeft: =Self.Height/2
                                    RadiusTopRight: =Self.Height/2
                                    TabIndex: =0
                                    Tooltip: ="Task work and progress information."
                                    Width: =36
                                    ZIndex: =3

                        icoIssueTaskItemCheckboxMTS As image:
                            AccessibleLabel: ="A checkbox to include this task in multiselect"
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.None
                            BorderThickness: =EDSDefaults.BorderThickness
                            DisabledFill: =Color.Transparent
                            FocusedBorderColor: =
                            Height: =Parent.TemplateHeight
                            HoverFill: =Self.Fill
                            Image: |-
                                =//If(ThisItem.SampleHeading exactin colGallerySelected.SampleHeading, EDSIcons.Checkbox, EDSIcons.CheckboxOutline)
                                EDSIcons.AddBox
                            PaddingBottom: =EDSStyles.Menu.IconPaddingBottom
                            PaddingLeft: =EDSStyles.DataTable.PaddingLeft
                            PaddingRight: =EDSStyles.DataTable.PaddingLeft
                            PaddingTop: =EDSStyles.Menu.IconPaddingTop
                            TabIndex: =0
                            Tooltip: |-
                                ="Attention: remember to change the collection to use for multiselection!"
                            Visible: =false
                            Width: =1
                            ZIndex: =2

                        shpIssueTaskItemOverlayMTS As rectangle:
                            AccessibleLabel: ="Click area for selecting the task"
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderStyle: =BorderStyle.None
                            DisabledFill: =Color.Transparent
                            Fill: =RGBA(0, 0, 0, 0)
                            FocusedBorderThickness: =4
                            Height: =Parent.TemplateHeight
                            HoverFill: =RGBA(0, 0, 0, 0.2)
                            OnSelect: |-
                                =If(
                                    icoIssueTaskItemCheckboxMTS.Visible,
                                    Select(icoIssueTaskItemCheckboxMTS),
                                    Select(Parent)
                                    
                                )
                            PressedFill: =EDSStyles.Menu.PressedFill
                            TabIndex: =0
                            Tooltip: |-
                                =$"Task:
                                {lblIssueTaskTitleMTS.Text} 
                                Description: 
                                {lblIssueTaskDescriptionMTS.Text}
                                Progress:
                                {ThisItem.Progress} %"
                            Width: =conIssueTaskTitleMTS_3.Width
                            ZIndex: =3

                    lblIssueTaskGallerySelectionInformationMTS As label:
                        BorderColor: =EDSStyles.Label.BorderColor
                        BorderStyle: =EDSStyles.Label.BorderStyle
                        BorderThickness: =EDSStyles.Label.BorderThickness
                        Color: =EDSStyles.Label.Color
                        DisabledBorderColor: =EDSStyles.Label.DisabledBorderColor
                        DisabledColor: =EDSStyles.Label.DisabledColor
                        DisabledFill: =EDSStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =EDSStyles.Label.Fill
                        FocusedBorderColor: =EDSStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =EDSStyles.Label.FocusedBorderThickness
                        Font: =EDSStyles.Label.Font
                        FontWeight: =FontWeight.Lighter
                        Height: =EDSStyles.Label.Height
                        HoverBorderColor: =EDSStyles.Label.HoverBorderColor
                        HoverColor: =EDSStyles.Label.HoverColor
                        HoverFill: =EDSStyles.Label.HoverFill
                        PaddingBottom: =EDSStyles.Label.PaddingBottom
                        PaddingLeft: =EDSStyles.Label.PaddingLeft
                        PaddingRight: =EDSStyles.Label.PaddingRight
                        PaddingTop: =EDSStyles.Label.PaddingTop
                        PressedBorderColor: =EDSStyles.Label.PressedBorderColor
                        PressedColor: =EDSStyles.Label.PressedColor
                        PressedFill: =EDSStyles.Label.PressedFill
                        Size: =EDSStyles.Label.FontSize
                        Text: |-
                            =If(vcoIssueTasksColumnHeaderSelectAllMTS.Visible,
                            //$"{CountRows(colGallerySelected)} of {CountRows(galIssueTasksMTS.AllItems)} issues selected",
                            $"{CountRows(galIssueTaskTableMTS.AllItems)} tasks")
                        Width: =Parent.Width
                        X: =16
                        Y: =16
                        ZIndex: =3

                htmIssueTasksDetailsMTS As htmlViewer:
                    BorderColor: =EDSStyles.HtmlText.BorderColor
                    BorderStyle: =EDSStyles.HtmlText.BorderStyle
                    BorderThickness: =EDSStyles.HtmlText.BorderThickness
                    Color: =EDSStyles.HtmlText.Color
                    DisabledBorderColor: =EDSStyles.HtmlText.DisabledBorderColor
                    DisabledFill: =EDSStyles.HtmlText.DisabledFill
                    Fill: =EDSStyles.HtmlText.Fill
                    Font: =EDSStyles.HtmlText.Font
                    Height: =96
                    HoverBorderColor: =EDSStyles.HtmlText.HoverBorderColor
                    HtmlText: |-
                        =With(
                            {
                                IssueTasks: Filter(
                                    'Living Quarter Maintenance Tasks',
                                    ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID
                                ),
                                Tag: Substitute(
                                    locActiveIssueReport.'Functional location',
                                    $"{gblActivePlant.sapPlantId}-",
                                    ""
                                )
                            },
                            With(
                                {
                                    CompletedTaskCount: CountIf(
                                        IssueTasks,
                                        ThisRecord.Progress = 100
                                    ),
                                    TasksInProgressCount: CountIf(
                                        IssueTasks,
                                        ThisRecord.Progress < 100
                                    ),
                                    IssueDisciplines: Concat(
                                        Distinct(
                                            IssueTasks,
                                            ThisRecord.Discipline
                                        ),
                                        ThisRecord.Value,
                                        ", "
                                    ),
                                    FunctionalLocation: locActiveIssueReport.'Functional location',
                                    FunctionalLocationUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}"
                                },
                                // Functional Location: <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{FunctionalLocationUrl}'>{FunctionalLocation}</a></font></b><br>
                                $"<center>
                        Issue Details: {locActiveIssueReport.'Registration Details'}
                        <hr>
                        <b>Tasks in progress: <font size=4 color='{EDSColorValues.Interactive.Danger.Resting}'>{TasksInProgressCount}</font> | 
                        Completed tasks: <font size=4 color='{EDSColorValues.Interactive.Success.Resting}'>{CompletedTaskCount}</font></b>
                        </center>
                        "
                            )
                        )
                    LayoutMinHeight: =100
                    PaddingBottom: =EDSStyles.HtmlText.PaddingBottom
                    PaddingLeft: =EDSStyles.HtmlText.PaddingLeft
                    PaddingRight: =EDSStyles.HtmlText.PaddingRight
                    PaddingTop: =EDSStyles.HtmlText.PaddingTop
                    Size: =EDSStyles.HtmlText.FontSize
                    Width: =EDSStyles.HtmlText.Width
                    X: =16
                    Y: =16
                    ZIndex: =4

            vcoIssueAssignmentAndTasksMTS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.Light
                Fill: =EDSColors.Background.Default
                Height: |-
                    =//Max(EDSStyles.Gallery.LayoutMinHeight, (Parent.Height-Self.Y*4))
                    480
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =4
                LayoutMinHeight: =100
                LayoutMinWidth: =343
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =8
                PaddingRight: =8
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Visible: =Or(!IsBlank(locActiveIssueReportTask.ActivityGUID), frmSelectedIssueTaskItemMTS.Mode = FormMode.New)
                Width: =343
                X: =40
                Y: =40
                ZIndex: =3

                hcoSelectedIssueTaskActionsHeaderMTS As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =1
                    PaddingRight: =1
                    ZIndex: =1

                    icoEditSelectedIssueTaskMTS As image:
                        AccessibleLabel: ="Button that initiates editing of the selected task and section"
                        BorderColor: =EDSStyles.Icon.BorderColor
                        BorderStyle: =EDSStyles.Icon.BorderStyle
                        BorderThickness: =EDSStyles.Icon.BorderThickness
                        DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                        DisabledFill: =EDSStyles.Icon.DisabledFill
                        DisplayMode: |-
                            =If(
                                And(
                                    locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active,
                                    RecordInfo(
                                        locActiveIssueReportTask,
                                        RecordInfo.EditPermission
                                    )
                                ),
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        Fill: =If(frmSelectedIssueTaskItemMTS.Mode = FormMode.Edit, Self.HoverFill, EDSDefaults.IconBackground)
                        FocusedBorderColor: =
                        FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                        Height: =EDSStyles.Icon.Height
                        HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                        HoverFill: =EDSStyles.Icon.HoverFill
                        Image: |
                            =EDSIcons.Edit
                        LayoutMinHeight: =EDSStyles.Icon.Height
                        OnSelect: |-
                            =//UpdateContext({locEditIssueRegistration: !locEditIssueRegistration});
                            EditForm(frmSelectedIssueTaskItemMTS)
                        PaddingBottom: =EDSStyles.Icon.PaddingBottom
                        PaddingLeft: =EDSStyles.Icon.PaddingLeft
                        PaddingRight: =EDSStyles.Icon.PaddingRight
                        PaddingTop: =EDSStyles.Icon.PaddingTop
                        PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                        PressedFill: =EDSStyles.Icon.PressedFill
                        RadiusBottomLeft: =Self.Height/2
                        RadiusBottomRight: =Self.Height/2
                        RadiusTopLeft: =Self.Height/2
                        RadiusTopRight: =Self.Height/2
                        TabIndex: =0
                        Width: =Self.Height
                        ZIndex: =1

                    lblSelectedIssueTaskTitleMTS As Text:
                        Align: ='TextCanvas.Align'.Center
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =EDSFonts.Heading.H2.Font
                        FontColor: =EDSColors.Static.Default
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =EDSFonts.Heading.H4.Size
                        Text: =$"{locActiveIssueReportTask.Title}"
                        Weight: =EDSFonts.Heading.H2.Weight
                        Width: =320
                        X: =0
                        Y: =0
                        ZIndex: =2

                    "tabSelectedIssueTaskSectionsMTS As 'Tab list'.pcfdataset":
                        AccessibleLabel: ="A tab selection to set the active task section"
                        BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                        DefaultSelectedItems: =[locActiveTaskSection]
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =EDSColors.Static.Default
                        Height: =36
                        Items: =["General", "Discipline", "Work"]
                        LayoutMinHeight: =55
                        LayoutMinWidth: =280
                        OnChange: |-
                            =UpdateContext(
                                {
                                    locActiveTaskSection: Self.Selected.Value,
                                    locPreviewNotificationBody: false
                                }
                            )
                        OnSelect: |-
                            =UpdateContext({locPreviewNotificationBody: false})
                        Size: ='TabList.Size'.Small
                        Visible: |-
                            =//CountA(Distinct(Filter('Living Quarter Maintenance Tasks', ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID), Discipline)) > 1
                            true
                        Width: =280
                        X: =0
                        Y: =0
                        ZIndex: =3

                    icoToggleFocusSelectedIssueTaskMTS As image:
                        AccessibleLabel: ="Button for toggling focus/fullscreen mode of the task section"
                        BorderColor: =EDSStyles.Icon.BorderColor
                        BorderStyle: =EDSStyles.Icon.BorderStyle
                        BorderThickness: =EDSStyles.Icon.BorderThickness
                        DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                        DisabledFill: =EDSStyles.Icon.DisabledFill
                        Fill: =EDSDefaults.IconBackground
                        FocusedBorderColor: =
                        FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                        Height: =EDSStyles.Icon.Height
                        HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                        HoverFill: =EDSStyles.Icon.HoverFill
                        Image: |-
                            =// Replace below with either a url encoded svg, select from EDSAppIcons object or from what you have added as media to the app.
                            If(locIssueReportFocused, EDSIcons.FullscreenExit,  EDSIcons.Fullscreen)
                        LayoutMinHeight: =EDSStyles.Icon.Height
                        OnSelect: |-
                            =UpdateContext({locIssueReportFocused: !locIssueReportFocused})
                        PaddingBottom: =EDSStyles.Icon.PaddingBottom
                        PaddingLeft: =EDSStyles.Icon.PaddingLeft
                        PaddingRight: =EDSStyles.Icon.PaddingRight
                        PaddingTop: =EDSStyles.Icon.PaddingTop
                        PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                        PressedFill: =EDSStyles.Icon.PressedFill
                        RadiusBottomLeft: =Self.Height/2
                        RadiusBottomRight: =Self.Height/2
                        RadiusTopLeft: =Self.Height/2
                        RadiusTopRight: =Self.Height/2
                        TabIndex: =0
                        Width: =Self.Height
                        ZIndex: =4

                conSelectedIssueTaskItemMTS As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =100
                    LayoutMinWidth: =360
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =1
                    PaddingRight: =1
                    ZIndex: =2

                    frmSelectedIssueTaskItemMTS As form.PowerApps_CoreControls_Form:
                        BorderColor: =EDSColors.Background.Medium
                        DataSource: ='Living Quarter Maintenance Tasks'
                        DefaultMode: |-
                            =If(
                                locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active,
                                FormMode.Edit,
                                FormMode.View
                            )
                        Fill: =EDSColors.Background.Default
                        Height: =Parent.Height
                        Item: =locActiveIssueReportTask
                        LayoutMinHeight: =250
                        LayoutMinWidth: =360
                        NumberOfColumns: =2
                        OnSuccess: |
                            =UpdateContext({locActiveIssueReportTask: LookUp('Living Quarter Maintenance Tasks', ActivityGUID = Self.LastSubmit.ActivityGUID)});
                            /*
                            If(
                                Self.Mode = FormMode.New,
                                Navigate(
                                    'Discipline Notification Screen',
                                    ScreenTransition.None,
                                    {
                                        locDefaultBody: "",
                                        locActiveIssueReportTask: locActiveIssueReportTask
                                    }
                                )
                            );*/
                            Select(btnCancelIssueTaskFormEditMTS);
                        UseFluentV9Cards: =true
                        Visible: |
                            =!locPreviewNotificationBody
                        ZIndex: =3

                        crdIssueTaskDisciplineMTS As typedDataCard.fluentV9ComboBoxOptionSetSingleEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_discipline"
                            Default: |-
                                =If(
                                    Parent.Mode = FormMode.New,
                                    'Maintenance Discipline'.Accommodation,
                                    ThisItem.Discipline
                                )
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_discipline")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: =DataCardValue6.Selected.Value
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "General"))
                            Width: =Parent.Width/2
                            X: =1
                            Y: =0
                            ZIndex: =1

                            DataCardKey8 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: |-
                                    =With(
                                        {
                                            DisciplineContact: Switch(
                                                DataCardValue6.Selected.Value,
                                                'Maintenance Discipline'.Accommodation,
                                                gblActivePlant.'CA Management Email',
                                                'Maintenance Discipline'.Automation,
                                                gblActivePlant.Automation,
                                                'Maintenance Discipline'.Electrical,
                                                gblActivePlant.Electrical,
                                                'Maintenance Discipline'.Hotel,
                                                gblActivePlant.Hotel,
                                                'Maintenance Discipline'.Kitchen,
                                                gblActivePlant.Kitchen,
                                                'Maintenance Discipline'.Mechanical,
                                                gblActivePlant.Mechanical,
                                                Blank()
                                            )
                                        },
                                    $"{Parent.DisplayName} ({Coalesce(DisciplineContact, "None!")})") // {Parent.Update} = {Parent.Default}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            DataCardValue6 As Combobox.pcfdataset:
                                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                DefaultSelectedItems: |
                                    =
                                        If(
                                            frmSelectedIssueTaskItemMTS.Mode = FormMode.New,
                                            //Defaults('Living Quarter Maintenance Tasks').Discipline,
                                            ['Maintenance Discipline'.Accommodation],
                                            [Parent.Default].Value
                                        )
                                DisplayMode: =Parent.DisplayMode
                                Height: =32
                                Items: =Choices('Maintenance Discipline')
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey8.Y + DataCardKey8.Height + 4
                                ZIndex: =2

                            ErrorMessage8 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue6.Y + DataCardValue6.Height
                                ZIndex: =3

                            StarVisible8 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey8.Y
                                ZIndex: =4

                        crdIssueTaskDisciplineTechnicianCommentMTS As typedDataCard.fluentV9TextualMultiLineEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_disciplinetechniciancomment"
                            Default: =ThisItem.'Discipline Technician Comment'
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_disciplinetechniciancomment")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =166
                            Required: =false
                            Update: =DataCardValue4.Value
                            Visible: =And(Parent.Mode <> FormMode.New, Or(locActiveTaskSection = "Work"))
                            Width: =Parent.Width
                            X: =0
                            Y: =2
                            ZIndex: =1

                            DataCardKey4 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue4 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =144
                                Mode: ='TextInputCanvas.Mode'.Multiline
                                Required: =Parent.Required
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Parent.Default
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey4.Y + DataCardKey4.Height + 4
                                ZIndex: =2

                            ErrorMessage4 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue4.Y + DataCardValue4.Height
                                ZIndex: =3

                            StarVisible4 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey4.Y
                                ZIndex: =4

                        crdIssueTaskDisciplineManagerCommentMTS As typedDataCard.fluentV9TextualMultiLineEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_disciplinemanagercomment"
                            Default: =ThisItem.'Discipline Manager Comment'
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_disciplinemanagercomment")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =166
                            Required: =false
                            Update: =DataCardValue2.Value
                            Visible: =And(Parent.Mode <> FormMode.New, locActiveTaskSection = "Discipline")
                            Width: =Parent.Width
                            X: =0
                            Y: =3
                            ZIndex: =1

                            DataCardKey2 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue2 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =144
                                Mode: ='TextInputCanvas.Mode'.Multiline
                                Required: =Parent.Required
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Parent.Default
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey2.Y + DataCardKey2.Height + 4
                                ZIndex: =2

                            ErrorMessage3 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue2.Y + DataCardValue2.Height
                                ZIndex: =3

                            StarVisible3 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey2.Y
                                ZIndex: =4

                        crdIssueTaskStartDateMTS As typedDataCard.fluentV9DateTimeEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="scheduledstart"
                            Default: =If(Parent.Mode = FormMode.New, DateAdd(Now(), 1, TimeUnit.Days), ThisItem.'Start Date')
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"scheduledstart")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: =If(Not IsBlank(DateValue1.SelectedDate), Date(Year(DateValue1.SelectedDate), Month(DateValue1.SelectedDate), Day(DateValue1.SelectedDate)) + Time(Value(HourValue1.Selected.Value), Value(MinuteValue1.Selected.Value), Value(Second(DateValue1.SelectedDate))))
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "Discipline", locActiveTaskSection = "General"))
                            Width: =Parent.Width/2
                            WidthFit: =false
                            X: =0
                            Y: =4
                            ZIndex: =1

                            DataCardKey5 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =$"{Parent.DisplayName}" // {Parent.Update} = {Parent.Default}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DateValue1 As 'Date picker'":
                                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =32
                                SelectedDate: =Parent.Default
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Width: =(Parent.Width - 48)
                                X: =24
                                Y: =DataCardKey5.Y + DataCardKey5.Height + 4
                                ZIndex: =2

                            HourValue1 As Dropdown.pcfdataset:
                                AccessibleLabel: ="Dropdown for selecting the task start time hour"
                                DefaultSelectedItems: =[Text(Hour(Parent.Default),"00")]
                                DisplayMode: =Parent.DisplayMode
                                Height: =28
                                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                                Visible: =false
                                Width: =DateValue1.Width / 2 - 10
                                X: =DateValue1.X + DateValue1.Width + 10
                                Y: =DateValue1.Y + 1
                                ZIndex: =3

                            Separator1 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =HourValue1.Height
                                Text: |-
                                    =":"
                                Visible: =false
                                Width: =10
                                X: =HourValue1.X + HourValue1.Width
                                Y: =HourValue1.Y
                                ZIndex: =4

                            MinuteValue1 As Dropdown.pcfdataset:
                                AccessibleLabel: ="Dropdown for selecting the task start time minute"
                                DefaultSelectedItems: =[Text(Minute(Parent.Default),"00")]
                                DisplayMode: =Parent.DisplayMode
                                Height: =28
                                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                                Visible: =false
                                Width: =HourValue1.Width
                                X: =HourValue1.X + HourValue1.Width + Separator1.Width
                                Y: =HourValue1.Y + 1
                                ZIndex: =5

                            ErrorMessage5 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DateValue1.Y + DateValue1.Height
                                ZIndex: =6

                            StarVisible5 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey5.Y
                                ZIndex: =7

                        crdIssueTaskEndDateMTS As typedDataCard.fluentV9DateTimeEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="scheduledend"
                            Default: =If(Parent.Mode = FormMode.New, DateAdd(Now(), 8, TimeUnit.Days), ThisItem.'End Date')
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"scheduledend")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: =If(Not IsBlank(DateValue2.SelectedDate), Date(Year(DateValue2.SelectedDate), Month(DateValue2.SelectedDate), Day(DateValue2.SelectedDate)) + Time(Value(HourValue2.Selected.Value), Value(MinuteValue2.Selected.Value), Value(Second(DateValue2.SelectedDate))))
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "Discipline", locActiveTaskSection = "General"))
                            Width: =Parent.Width/2
                            WidthFit: =false
                            X: =1
                            Y: =4
                            ZIndex: =1

                            DataCardKey6 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =$"{Parent.DisplayName}" // {Parent.Update} = {Parent.Default}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DateValue2 As 'Date picker'":
                                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =32
                                SelectedDate: =Parent.Default
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Width: =(Parent.Width - 48)
                                X: =24
                                Y: =DataCardKey6.Y + DataCardKey6.Height + 4
                                ZIndex: =2

                            HourValue2 As Dropdown.pcfdataset:
                                AccessibleLabel: ="Dropdown for selecting the task completion time hour"
                                DefaultSelectedItems: =[Text(Hour(Parent.Default),"00")]
                                DisplayMode: =Parent.DisplayMode
                                Height: =28
                                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                                Visible: =false
                                Width: =DateValue2.Width / 2 - 10
                                X: =DateValue2.X + DateValue2.Width + 10
                                Y: =DateValue2.Y + 1
                                ZIndex: =3

                            Separator2 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =HourValue2.Height
                                Text: |-
                                    =":"
                                Visible: =false
                                Width: =10
                                X: =HourValue2.X + HourValue2.Width
                                Y: =HourValue2.Y
                                ZIndex: =4

                            MinuteValue2 As Dropdown.pcfdataset:
                                AccessibleLabel: ="Dropdown for selecting the task completion time minute"
                                DefaultSelectedItems: =[Text(Minute(Parent.Default),"00")]
                                DisplayMode: =Parent.DisplayMode
                                Height: =28
                                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                                Visible: =false
                                Width: =HourValue2.Width
                                X: =HourValue2.X + HourValue2.Width + Separator2.Width
                                Y: =HourValue2.Y + 1
                                ZIndex: =5

                            ErrorMessage6 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DateValue2.Y + DateValue2.Height
                                ZIndex: =6

                            StarVisible6 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey6.Y
                                ZIndex: =7

                        crdIssueTaskProgressMTS As typedDataCard.fluentV9NumberEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_progress"
                            Default: =ThisItem.Progress
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_progress")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: =sldIssueTaskProgressSliderMTS.Value
                            Visible: =And(Parent.Mode <> FormMode.New, locActiveTaskSection <> "General")
                            Width: =Parent.Width/2
                            WidthFit: =false
                            X: =0
                            Y: =5
                            ZIndex: =1

                            DataCardKey9 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =$"{Parent.DisplayName}" // {Parent.Update} = {Parent.Default}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            ErrorMessage7 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =sldIssueTaskProgressSliderMTS.Y + sldIssueTaskProgressSliderMTS.Height
                                ZIndex: =3

                            StarVisible7 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey9.Y
                                ZIndex: =4

                            sldIssueTaskProgressSliderMTS As Slider:
                                AccessibleLabel: ="Select current progress"
                                BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                DisplayMode: =DisplayMode.Edit
                                Height: =35
                                Value: =Parent.Default
                                Width: =Parent.Width - 48*2
                                X: =24
                                Y: =35
                                ZIndex: =5

                            lblProgressValueMTS As Text:
                                DisplayMode: =DisplayMode.Edit
                                Font: =Font.Lato
                                FontColor: =EDSColors.Static.Default
                                Height: =22
                                Text: =$"{sldIssueTaskProgressSliderMTS.Value} %"
                                Weight: ='TextCanvas.Weight'.Regular
                                Width: =48
                                Wrap: =false
                                X: =sldIssueTaskProgressSliderMTS.X+sldIssueTaskProgressSliderMTS.Width
                                Y: =40
                                ZIndex: =6

                        crdIssueTaskActivityReportMTS As typedDataCard.fluentV9TextualEditCard:
                            BorderColor: =EDSColors.Interactive.Primary.Resting
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_activityreport"
                            Default: =ThisItem.M3
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_activityreport")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            MaxLength: =DataSourceInfo([@'Living Quarter Maintenance Tasks'], DataSourceInfo.MaxLength, "josca_activityreport")
                            Required: =false
                            Update: =DataCardValue8.Value
                            Visible: =And(Parent.Mode <> FormMode.New, locActiveTaskSection <> "General")
                            Width: =Parent.Width/2
                            X: =1
                            Y: =5
                            ZIndex: =1

                            DataCardKey11 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue8 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =32
                                Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                Required: =Parent.Required
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Parent.Default
                                Width: =Parent.Width - 144
                                X: =24
                                Y: =DataCardKey11.Y + DataCardKey11.Height + 4
                                ZIndex: =2

                            ErrorMessage10 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue8.Y + DataCardValue8.Height
                                ZIndex: =3

                            StarVisible10 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey11.Y
                                ZIndex: =4

                            btnLinkToExternalActivityReportTaskSystemMTS As Button:
                                AccessibleLabel: ="A button that opens the notification service (external) for the functional location associated with the selected issue registration/task."
                                Appearance: ='ButtonCanvas.Appearance'.Primary
                                BasePaletteColor: =
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =32
                                OnSelect: |-
                                    =With(
                                        {
                                            Tag: Substitute(
                                                locActiveIssueReport.'Functional location',
                                                $"{gblActivePlant.sapPlantId}-",
                                                ""
                                            ),
                                            ActivityReportId: Text(DataCardValue8.Value)
                                        },
                                        If(
                                            IsBlank(ActivityReportId),
                                            // $"https://notifications.equinor.com/{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}
                                            Launch($"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/{gblNotificationUrl.FunctionalLocation}/{Tag}"),
                                            Launch($"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/{gblNotificationUrl.Notification}/m3/{ActivityReportId}")
                                        )
                                    )
                                Text: =$"{If(IsBlank(DataCardValue8.Value), "Create", "View")}  M3"
                                Width: =96
                                X: =DataCardValue8.Width+DataCardValue8.X
                                Y: =DataCardValue8.Y
                                ZIndex: =5

                            "InfoButtonCanvas3_5 As 'Information button'":
                                AccessibleLabel: =$"Information button for displaying information about {Parent.DisplayName}"
                                BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                Content: ="Please update this value with the number when creating a new M3 Notification! (Future versions aim to have proper integration with SAP)"
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =EDSColors.Static.Default
                                Height: =32
                                Width: =32
                                X: =Parent.Width - 48
                                Y: =5
                                ZIndex: =7

                        crdIssueTaskTechnicianMTS As typedDataCard.fluentV9ComboBoxEditCard:
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_Technician_josca_LivingQuarterMaintenanceTask"
                            Default: =ThisItem.Technician
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_Technician_josca_LivingQuarterMaintenanceTask")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: |-
                                =//LookUp(Users, ThisRecord.'Primary Email' =  DataCardValue16.Selected.userPrincipalName)
                                DataCardValue16.Selected
                            Visible: =And(Parent.Mode <> FormMode.New, locActiveTaskSection = "Discipline")
                            Width: =320
                            X: =0
                            Y: =6
                            ZIndex: =1

                            DataCardKey19 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            ErrorMessage18 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue16.Y + DataCardValue16.Height
                                ZIndex: =3

                            StarVisible18 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =20
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey19.Y
                                ZIndex: =4

                            DataCardValue16 As combobox:
                                AccessibleLabel: ="A dropdown with search for selecting a person to set as the technician assigned to this task"
                                BorderColor: =EDSColors.Interactive.Primary.Resting
                                BorderStyle: =EDSStyles.ComboBox.BorderStyle
                                BorderThickness: =EDSStyles.ComboBox.BorderThickness
                                ChevronBackground: =EDSStyles.ComboBox.ChevronBackground
                                ChevronDisabledBackground: =EDSStyles.ComboBox.ChevronDisabledBackground
                                ChevronDisabledFill: =EDSStyles.ComboBox.ChevronDisabledFill
                                ChevronFill: =EDSStyles.ComboBox.ChevronFill
                                ChevronHoverBackground: =EDSStyles.ComboBox.ChevronHoverBackground
                                ChevronHoverFill: =EDSStyles.ComboBox.ChevronHoverFill
                                Color: =EDSColors.Static.Default
                                Default: =Parent.Default
                                DefaultSelectedItems: =Parent.Default
                                DisabledBorderColor: =EDSStyles.ComboBox.DisabledBorderColor
                                DisabledColor: =EDSStyles.ComboBox.DisabledColor
                                DisabledFill: =EDSStyles.ComboBox.DisabledFill
                                DisplayFields: =["fullname","internalemailaddress"]
                                DisplayMode: =Parent.DisplayMode
                                Fill: =EDSStyles.ComboBox.Fill
                                FocusedBorderColor: =EDSStyles.ComboBox.FocusedBorderColor
                                FocusedBorderThickness: =EDSStyles.ComboBox.FocusedBorderThickness
                                Font: =EDSStyles.ComboBox.Font
                                Height: =28
                                HoverBorderColor: =EDSStyles.ComboBox.HoverBorderColor
                                HoverColor: =EDSStyles.ComboBox.HoverColor
                                HoverFill: =EDSStyles.ComboBox.HoverFill
                                InputTextPlaceholder: ="Find technician"
                                Items: =Filter(Users, 'Users (Views)'.'Enabled Users')
                                NoSelectionText: ="Not assigned"
                                PaddingBottom: =EDSStyles.ComboBox.PaddingBottom
                                PaddingLeft: =EDSStyles.ComboBox.PaddingLeft
                                PaddingRight: =EDSStyles.ComboBox.PaddingRight
                                PaddingTop: =EDSStyles.ComboBox.PaddingTop
                                PressedBorderColor: =EDSStyles.ComboBox.PressedBorderColor
                                PressedColor: =EDSStyles.ComboBox.PressedColor
                                PressedFill: =EDSStyles.ComboBox.PressedFill
                                SearchFields: =["fullname","internalemailaddress"]
                                SearchItems: =Search(Filter(Users, 'Users (Views)'.'Enabled Users'),DataCardValue16.SearchText,"fullname","internalemailaddress")
                                SelectionColor: =EDSStyles.ComboBox.SelectionColor
                                SelectionFill: =EDSStyles.ComboBox.SelectionFill
                                SelectionTagFill: =EDSStyles.ComboBox.SelectionTagFill
                                SelectMultiple: =false
                                Size: =EDSStyles.ComboBox.FontSize
                                Template: =ListItemTemplate.Person
                                Width: =DataCardKey19.Width
                                X: =24
                                Y: =DataCardKey19.Height + DataCardKey19.Y
                                ZIndex: =5

                        cdsIssueTaskFailureReportMTS As typedDataCard.fluentV9TextualEditCard:
                            BorderColor: =EDSColors.Interactive.Primary.Resting
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_failurereport"
                            Default: =ThisItem.M2
                            DisplayMode: |-
                                =//Parent.DisplayMode
                                DisplayMode.Edit
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_failurereport")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            MaxLength: =DataSourceInfo([@'Living Quarter Maintenance Tasks'], DataSourceInfo.MaxLength, "josca_failurereport")
                            Required: =false
                            Update: =DataCardValue7.Value
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "General"))
                            Width: =Parent.Width/2
                            X: =1
                            Y: =6
                            ZIndex: =1

                            DataCardKey10 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue7 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =32
                                Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                                Required: =Parent.Required
                                Type: ='TextInputCanvas.Type'.Text
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Coalesce(Parent.Default, locActiveIssueReport.FailureReport)
                                Width: =Parent.Width - 144
                                X: =24
                                Y: =DataCardKey10.Y + DataCardKey10.Height + 4
                                ZIndex: =2

                            ErrorMessage9 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue7.Y + DataCardValue7.Height
                                ZIndex: =3

                            StarVisible9 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey10.Y
                                ZIndex: =4

                            btnTaskIssueFailureReportMTS As Button:
                                AccessibleLabel: ="A button that opens the notification service (external) for the functional location associated with the selected issue registration/task."
                                Appearance: ='ButtonCanvas.Appearance'.Primary
                                BasePaletteColor: =
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =32
                                OnSelect: |-
                                    =With(
                                        {
                                            Tag: Substitute(
                                                locActiveIssueReport.'Functional location',
                                                $"{gblActivePlant.sapPlantId}-",
                                                ""
                                            ),
                                            FailureReportId: DataCardValue7.Value
                                        },
                                        If(
                                            IsBlank(FailureReportId),
                                            // $"https://notifications.equinor.com/{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}
                                            Launch($"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/{gblNotificationUrl.FunctionalLocation}/{Tag}"),
                                            Launch($"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/{gblNotificationUrl.Notification}/m2/{FailureReportId}")
                                        )
                                    )
                                Text: =$"{If(IsBlank(DataCardValue7.Value), "Create", "View")}  M2"
                                Width: =96
                                X: =DataCardValue7.Width+DataCardValue7.X
                                Y: =DataCardValue7.Y
                                ZIndex: =5

                            "InfoButtonCanvas3_6 As 'Information button'":
                                AccessibleLabel: =$"Information button for displaying information about {Parent.DisplayName}"
                                BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                                Content: ="Please update this value with the number when creating a new M2 Notification! (Future versions aim to have proper integration with SAP)"
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =EDSColors.Static.Default
                                Height: =32
                                Width: =32
                                X: =Parent.Width - 48
                                Y: =5
                                ZIndex: =7

                        crdIssueTaskIssueMTS As typedDataCard.fluentV9ComboBoxEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="josca_Issue_josca_LivingQuarterMaintenanceTask"
                            Default: |-
                                =//LookUp(Choices('Living Quarter Maintenance Tasks'.Issue), ThisRecord.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID)
                                locActiveIssueReport
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"josca_Issue_josca_LivingQuarterMaintenanceTask")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            Required: =false
                            Update: =Self.Default
                            Visible: |-
                                =//Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "General"))
                                false
                            Width: =400
                            X: =0
                            Y: =7
                            ZIndex: =1

                            DataCardKey7 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: |-
                                    =$"{Parent.DisplayName}" // Valid: {Parent.Valid}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            DataCardValue5 As Combobox.pcfdataset:
                                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                                DefaultSelectedItems: =Parent.Default
                                DisplayMode: =DisplayMode.View
                                Height: =32
                                Items: =Choices([@'Living Quarter Maintenance Tasks'].'Issue Registration')
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey7.Y + DataCardKey7.Height + 4
                                ZIndex: =2

                                "'Created On1' As pcfDataField.textualColumn":
                                    FieldDisplayName: ="Created On"
                                    FieldName: ="createdon"
                                    FieldType: ="d"
                                    FieldVariantName: ="textualColumn"
                                    Order: =2
                                    ZIndex: =8

                                SubmissionId1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="SubmissionId"
                                    FieldName: ="josca_name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =9

                        crdIssueTaskTitleMTS As typedDataCard.fluentV9TextualEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="subject"
                            Default: |-
                                =If(
                                    Parent.Mode = FormMode.New,
                                    $"Issue #{locActiveIssueReport.SubmissionId} {locActiveIssueReport.'Functional location'}",
                                    ThisItem.Title
                                )
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"subject")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =70
                            MaxLength: =DataSourceInfo([@'Living Quarter Maintenance Tasks'], DataSourceInfo.MaxLength, "subject")
                            Required: =true
                            Update: =DataCardValue1.Value
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "General"))
                            Width: =Parent.Width/2
                            X: =0
                            Y: =0
                            ZIndex: =5

                            DataCardKey1 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =$"{Parent.DisplayName}" // {Parent.Update} = {Parent.Default}"
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue1 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =32
                                Mode: ='TextInputCanvas.Mode'.SingleLine
                                Placeholder: ="Task title"
                                Required: =Parent.Required
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Parent.Default
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey1.Y + DataCardKey1.Height + 4
                                ZIndex: =2

                            ErrorMessage1 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue1.Y + DataCardValue1.Height
                                ZIndex: =3

                            StarVisible1 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey1.Y
                                ZIndex: =4

                        crdIssueTaskDescriptionMTS As typedDataCard.fluentV9TextualMultiLineEditCard:
                            BorderColor: =EDSDefaults.BorderColor
                            BorderStyle: =BorderStyle.Solid
                            DataField: ="description"
                            Default: =ThisItem.Description
                            DisplayMode: =Parent.DisplayMode
                            DisplayName: =DataSourceInfo([@'Living Quarter Maintenance Tasks'],DataSourceInfo.DisplayName,"description")
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =166
                            Required: =false
                            Update: =DataCardValue3.Value
                            Visible: =Or(Parent.Mode = FormMode.New, Or(locActiveTaskSection = "General"))
                            Width: =Parent.Width
                            X: =0
                            Y: =1
                            ZIndex: =5

                            DataCardKey3 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =22
                                Text: =Parent.DisplayName
                                Weight: ='TextCanvas.Weight'.Semibold
                                Width: =Parent.Width - 48
                                Wrap: =false
                                X: =24
                                Y: =10
                                ZIndex: =1

                            "DataCardValue3 As 'Text input'":
                                AccessibleLabel: =Parent.DisplayName
                                BasePaletteColor: =
                                DisplayMode: =Parent.DisplayMode
                                FontColor: =
                                Height: =144
                                Mode: ='TextInputCanvas.Mode'.Multiline
                                Required: =Parent.Required
                                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                                Value: =Parent.Default
                                Width: =Parent.Width - 48
                                X: =24
                                Y: =DataCardKey3.Y + DataCardKey3.Height + 4
                                ZIndex: =2

                            ErrorMessage2 As Text:
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: =Parent.Error
                                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                                Width: =Parent.Width - 48
                                Wrap: =true
                                X: =24
                                Y: =DataCardValue3.Y + DataCardValue3.Height
                                ZIndex: =3

                            StarVisible2 As Text:
                                Align: ='TextCanvas.Align'.Center
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =
                                Height: =30
                                Text: ="*"
                                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                                Width: =30
                                X: =0
                                Y: =DataCardKey3.Y
                                ZIndex: =4

                    htmlDisciplineNotificationMailBodyMTS As htmlViewer:
                        Fill: =RGBA(255, 255, 255, 1)
                        FillPortions: =1
                        Font: =Font.Lato
                        Height: =339
                        HtmlText: |-
                            =With(
                                {
                                    IssueTasks: Filter(
                                        'Living Quarter Maintenance Tasks',
                                        ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID
                                    ),
                                    Tag: Substitute(
                                        locActiveIssueReport.'Functional location',
                                        $"{gblActivePlant.sapPlantId}-",
                                        ""
                                    )
                                },
                                With(
                                    {
                                        DisciplineContact: Switch(
                                            DataCardValue6.Selected.Value,
                                            'Maintenance Discipline'.Accommodation,
                                            gblActivePlant.'CA Management Email',
                                            'Maintenance Discipline'.Automation,
                                            gblActivePlant.Automation,
                                            'Maintenance Discipline'.Electrical,
                                            gblActivePlant.Electrical,
                                            'Maintenance Discipline'.Hotel,
                                            gblActivePlant.Hotel,
                                            'Maintenance Discipline'.Kitchen,
                                            gblActivePlant.Kitchen,
                                            'Maintenance Discipline'.Mechanical,
                                            gblActivePlant.Mechanical,
                                            Blank()
                                        ),
                                        DisciplineTaskUrl: $"{gblAppShortUrlBase}?taskId={locActiveIssueReportTask.ActivityGUID}&taskSection=Discipline",
                                        WorkTaskUrl: $"{gblAppShortUrlBase}?taskId={locActiveIssueReportTask.ActivityGUID}&taskSection=Work",
                                        FunctionalLocationUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}",
                                        FailureReportUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view/m2/{locActiveIssueReport.FailureReport}"
                                    },
                                    Switch(
                                        locActiveTaskSection,
                                        "General",
                                        $"
                            <h2><font color='{EDSColorValues.Static.Default}'>LQ Maintenance request (#{locActiveIssueReport.SubmissionId})</font></h2>
                            <p>Maintenance is needed by discipline ({locActiveIssueReportTask.Discipline}) in LQ, the task is managed in <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{gblAppShortUrlBase}'>LQ Issues & Maintenance dashboard</a></font></b>.<p>
                            <p>Please review and assign this task <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{DisciplineTaskUrl}'>here</a></font></b></p>
                            <h3><font color='{EDSColorValues.Static.Default}'>Detail resources (SAP)</font></h3>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Functional Location:</font></b><a href='{FunctionalLocationUrl}'>{locActiveIssueReport.'Functional location'}</a></p>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Failure report (M2):</font></b><a href='{FailureReportUrl}'>{locActiveIssueReport.FailureReport}</a></p>
                            <h4><font color='{EDSColorValues.Static.Default}'>Issue submission details</font></h4>
                            <p><b><font color='{EDSColorValues.Static.Default}'>Issue #{locActiveIssueReport.SubmissionId}</font></b></p>
                            <p>{locActiveIssueReport.'Registration Details'}
                            ",
                                        "Discipline",
                                        $"
                            <h2><font color='{EDSColorValues.Static.Default}'>LQ Maintenance request (#{locActiveIssueReport.SubmissionId})</font></h2>
                            <p>You have been assigned a maintenance task in LQ, the task is managed in <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{gblAppShortUrlBase}'>LQ Issues & Maintenance dashboard</a></font></b>.<p>
                            <h3>Discipline manager comment</h4>
                            <p>{locActiveIssueReportTask.'Discipline Manager Comment'}</p>
                            <p>Details about this task can be found <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{WorkTaskUrl}'>here</a></font></b><br>
                            <b>Note</b>: Please update your progress in the dashboard</p>
                            <h4><font color='{EDSColorValues.Static.Default}'>Detail resources (SAP)</font></h3>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Functional Location:</font></b><a href='{FunctionalLocationUrl}'>{locActiveIssueReport.'Functional location'}</a></p>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Failure report (M2):</font></b><a href='{FailureReportUrl}'>{locActiveIssueReport.FailureReport}</a></p>
                            "
                                    )
                                )
                            )
                        Visible: =locPreviewNotificationBody
                        Width: =451
                        X: =717
                        Y: =234
                        ZIndex: =4

                    rtxDisciplineNotificationMailBodyMTS_DISABLED As richTextEditor:
                        AccessibleLabel: ="A rich text editor for changing the notification text"
                        BorderColor: |
                            =EDSColors.Interactive.Primary.Resting
                        Default: |-
                            =With(
                                {
                                    IssueTasks: Filter(
                                        'Living Quarter Maintenance Tasks',
                                        ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID
                                    ),
                                    Tag: Substitute(
                                        locActiveIssueReport.'Functional location',
                                        $"{gblActivePlant.sapPlantId}-",
                                        ""
                                    )
                                },
                                With(
                                    {
                                        DisciplineContact: Switch(
                                            DataCardValue6.Selected.Value,
                                            'Maintenance Discipline'.Accommodation,
                                            gblActivePlant.'CA Management Email',
                                            'Maintenance Discipline'.Automation,
                                            gblActivePlant.Automation,
                                            'Maintenance Discipline'.Electrical,
                                            gblActivePlant.Electrical,
                                            'Maintenance Discipline'.Hotel,
                                            gblActivePlant.Hotel,
                                            'Maintenance Discipline'.Kitchen,
                                            gblActivePlant.Kitchen,
                                            'Maintenance Discipline'.Mechanical,
                                            gblActivePlant.Mechanical,
                                            Blank()
                                        ),
                                        DisciplineTaskUrl: $"{gblAppShortUrlBase}?taskId={locActiveIssueReportTask.ActivityGUID}&taskSection=Discipline",
                                        FunctionalLocationUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view-tag/{Tag}",
                                        FailureReportUrl: $"{gblNotificationUrl.Base}{gblActivePlant.sapPlantId}/notification-view/m2/{locActiveIssueReport.FailureReport}"
                                    },
                                    $"<h2><font color='{EDSColorValues.Static.Default}'>LQ Maintenance request (#{locActiveIssueReport.SubmissionId})</font></h2>
                            <p>Maintenance is needed by discipline ({locActiveIssueReportTask.Discipline}) in LQ, the task is managed by <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{gblAppShortUrlBase}'>LQ Issues & Maintenance dashboard</a></font></b>.<p>
                            <p>Please review and assign this task <b><font color='{EDSColorValues.Interactive.Primary.Resting}'><a href='{DisciplineTaskUrl}'>here</a></font></b></p>
                            <h3><font color='{EDSColorValues.Static.Default}'>Details</font></h3>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Functional Location:</font></b><a href='{FunctionalLocationUrl}'>{locActiveIssueReport.'Functional location'}</a></p>
                            <p><b><font color='{EDSColorValues.Interactive.Primary.Resting}'>Failure report (M2):</font></b><a href='{FailureReportUrl}'>{locActiveIssueReport.FailureReport}</a></p>
                            <h4><font color='{EDSColorValues.Static.Default}'>Issue submission details</font></h4>
                            <p><b><font color='{EDSColorValues.Static.Default}'>Issue #{locActiveIssueReport.SubmissionId}</font></b></p>
                            <p>{locActiveIssueReport.'Registration Details'}
                            "
                                )
                            )
                        FillPortions: =1
                        Visible: =false
                        ZIndex: =5

                conIssueDisciplineCreateTaskMTS As groupContainer.horizontalAutoLayoutContainer:
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutGap: =8
                    LayoutJustifyContent: =LayoutJustifyContent.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =1
                    PaddingRight: =1
                    ZIndex: =4

                    btnCancelIssueTaskFormEditMTS As button:
                        BorderColor: =EDSStyles.OutlinedDangerButton.BorderColor
                        BorderStyle: =EDSStyles.OutlinedButton.BorderStyle
                        BorderThickness: =EDSStyles.Button.BorderThickness
                        Color: =EDSStyles.OutlinedDangerButton.Color
                        DisabledBorderColor: =EDSStyles.OutlinedButton.DisabledBorderColor
                        DisabledColor: =EDSStyles.Button.DisabledColor
                        DisabledFill: =EDSStyles.OutlinedButton.DisabledFill
                        Fill: =EDSStyles.OutlinedDangerButton.Fill
                        FocusedBorderThickness: =EDSStyles.Button.FocusedBorderThickness
                        Font: =EDSStyles.Button.Font
                        FontWeight: =EDSStyles.Button.FontWeight
                        Height: =EDSStyles.Button.Height
                        HoverBorderColor: =EDSStyles.OutlinedDangerButton.HoverBorderColor
                        HoverColor: =EDSStyles.OutlinedDangerButton.HoverColor
                        HoverFill: =EDSStyles.OutlinedDangerButton.HoverFill
                        OnSelect: |-
                            =//UpdateContext({locShowIssueReportTaskForm: false});
                            ViewForm(frmSelectedIssueTaskItemMTS)
                        PaddingBottom: =EDSStyles.Button.PaddingBottom
                        PaddingLeft: =EDSStyles.Button.PaddingLeft
                        PaddingRight: =EDSStyles.Button.PaddingRight
                        PaddingTop: =EDSStyles.Button.PaddingTop
                        PressedBorderColor: =EDSStyles.OutlinedDangerButton.PressedBorderColor
                        PressedColor: =EDSStyles.OutlinedDangerButton.PressedColor
                        PressedFill: =EDSStyles.OutlinedButton.PressedFill
                        RadiusBottomLeft: =EDSStyles.Button.RadiusBottomLeft
                        RadiusBottomRight: =EDSStyles.Button.RadiusBottomRight
                        RadiusTopLeft: =EDSStyles.Button.RadiusTopLeft
                        RadiusTopRight: =EDSStyles.Button.RadiusTopRight
                        Size: =EDSStyles.Button.FontSize
                        Text: ="Cancel"
                        Visible: =frmSelectedIssueTaskItemMTS.Mode <> FormMode.View
                        X: =16
                        Y: =16
                        ZIndex: =1

                    btnSubmitIssueTaskFormMTS As button:
                        BorderColor: =EDSStyles.Button.BorderColor
                        BorderStyle: =EDSStyles.OutlinedButton.BorderStyle
                        BorderThickness: =EDSStyles.Button.BorderThickness
                        Color: =EDSStyles.OutlinedButton.Color
                        DisabledBorderColor: =EDSStyles.OutlinedButton.DisabledBorderColor
                        DisabledColor: =EDSStyles.Button.DisabledColor
                        DisabledFill: =EDSStyles.OutlinedButton.DisabledFill
                        DisplayMode: =If(And(frmSelectedIssueTaskItemMTS.Mode <> FormMode.View,frmSelectedIssueTaskItemMTS.Unsaved), DisplayMode.Edit, DisplayMode.Disabled)
                        Fill: =EDSStyles.OutlinedButton.Fill
                        FocusedBorderColor: =EDSStyles.OutlinedButton.FocusedBorderColor
                        FocusedBorderThickness: =EDSStyles.Button.FocusedBorderThickness
                        Font: =EDSStyles.Button.Font
                        FontWeight: =EDSStyles.Button.FontWeight
                        Height: =EDSStyles.Button.Height
                        HoverBorderColor: =EDSStyles.Button.HoverBorderColor
                        HoverColor: =EDSStyles.OutlinedButton.HoverColor
                        HoverFill: =EDSStyles.OutlinedButton.HoverFill
                        OnSelect: |
                            =SubmitForm(frmSelectedIssueTaskItemMTS);
                        PaddingBottom: =EDSStyles.Button.PaddingBottom
                        PaddingLeft: =EDSStyles.Button.PaddingLeft
                        PaddingRight: =EDSStyles.Button.PaddingRight
                        PaddingTop: =EDSStyles.Button.PaddingTop
                        PressedBorderColor: =EDSStyles.Button.PressedBorderColor
                        PressedColor: =EDSStyles.OutlinedButton.PressedColor
                        PressedFill: =EDSStyles.OutlinedButton.PressedFill
                        RadiusBottomLeft: =EDSStyles.Button.RadiusBottomLeft
                        RadiusBottomRight: =EDSStyles.Button.RadiusBottomRight
                        RadiusTopLeft: =EDSStyles.Button.RadiusTopLeft
                        RadiusTopRight: =EDSStyles.Button.RadiusTopRight
                        Size: =EDSStyles.Button.FontSize
                        Text: ="Save"
                        Visible: =And(frmSelectedIssueTaskItemMTS.Mode <> FormMode.View)
                        X: =16
                        Y: =16
                        ZIndex: =2

                    icoIssueTaskFormSaveStatusMTS_DISABLED As image:
                        AccessibleLabel: ="Icon indicating the save status of the form"
                        BorderColor: =EDSStyles.Icon.BorderColor
                        BorderStyle: =EDSStyles.Icon.BorderStyle
                        BorderThickness: =EDSStyles.Icon.BorderThickness
                        DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                        DisabledFill: =EDSStyles.Icon.DisabledFill
                        Fill: =EDSDefaults.IconBackground
                        FocusedBorderColor: =
                        FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                        Height: =EDSStyles.Icon.Height
                        HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                        HoverFill: =EDSStyles.Icon.HoverFill
                        Image: =EDSIcons.Undo
                        LayoutMinHeight: =EDSStyles.Icon.Height
                        OnSelect: =ResetForm(frmSelectedIssueTaskItemMTS)
                        PaddingBottom: =EDSStyles.Icon.PaddingBottom
                        PaddingLeft: =EDSStyles.Icon.PaddingLeft
                        PaddingRight: =EDSStyles.Icon.PaddingRight
                        PaddingTop: =EDSStyles.Icon.PaddingTop
                        PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                        PressedFill: =EDSStyles.Icon.PressedFill
                        RadiusBottomLeft: =Self.Height/2
                        RadiusBottomRight: =Self.Height/2
                        RadiusTopLeft: =Self.Height/2
                        RadiusTopRight: =Self.Height/2
                        TabIndex: =0
                        Tooltip: ="Reset changes"
                        Visible: |-
                            =/*
                            And(
                                locShowIssueReportTaskForm,
                                frmIssueRegistrationTaskMTS.Mode = FormMode.Edit,
                                frmIssueRegistrationTaskMTS.Unsaved
                            )
                            */
                            //Disabled for now, unclear which field becomes unsaved
                            false
                        Width: =Self.Height
                        ZIndex: =3

                    "infSendNotificationDetailsMTS As 'Information button'":
                        AccessibleLabel: =$"Information button for displaying information about the notification function"
                        BasePaletteColor: =EDSColors.Interactive.Primary.Resting
                        Content: ="This will send a request to the discipline management"
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =EDSColors.Static.Default
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =32
                        Visible: =btnSendNotificationMTS.Visible
                        Width: =32
                        X: =Parent.Width - 48
                        Y: =5
                        ZIndex: =4

                    btnSendNotificationMTS As button:
                        BorderColor: =EDSStyles.Button.BorderColor
                        BorderStyle: =EDSStyles.OutlinedButton.BorderStyle
                        BorderThickness: =EDSStyles.Button.BorderThickness
                        Color: =EDSStyles.OutlinedButton.Color
                        DisabledBorderColor: =EDSStyles.OutlinedButton.DisabledBorderColor
                        DisabledColor: =EDSStyles.Button.DisabledColor
                        DisabledFill: =EDSStyles.OutlinedButton.DisabledFill
                        DisplayMode: |-
                            =With(
                                {
                                    Reciever: Switch(
                                        locActiveTaskSection,
                                        "General",
                                        Switch(
                                            DataCardValue6.Selected.Value,
                                            'Maintenance Discipline'.Accommodation,
                                            gblActivePlant.'CA Management Email',
                                            'Maintenance Discipline'.Automation,
                                            gblActivePlant.Automation,
                                            'Maintenance Discipline'.Electrical,
                                            gblActivePlant.Electrical,
                                            'Maintenance Discipline'.Hotel,
                                            gblActivePlant.Hotel,
                                            'Maintenance Discipline'.Kitchen,
                                            gblActivePlant.Kitchen,
                                            'Maintenance Discipline'.Mechanical,
                                            gblActivePlant.Mechanical,
                                            Blank()
                                        ),
                                        "Discipline",
                                        locActiveIssueReportTask.Technician.'Primary Email'
                                    )
                                },
                                If(
                                    And(
                                        frmSelectedIssueTaskItemMTS.Mode = FormMode.View,
                                        locActiveIssueReport.Status = 'Status (Issue Registrations)'.Active,
                                        !IsBlank(Reciever)
                                    ),
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            )
                        Fill: =EDSStyles.OutlinedButton.Fill
                        FillPortions: =1
                        FocusedBorderColor: =EDSStyles.OutlinedButton.FocusedBorderColor
                        FocusedBorderThickness: =EDSStyles.Button.FocusedBorderThickness
                        Font: =EDSStyles.Button.Font
                        FontWeight: =FontWeight.Normal
                        Height: =EDSStyles.Button.Height
                        HoverBorderColor: =EDSStyles.Button.HoverBorderColor
                        HoverColor: =EDSStyles.OutlinedButton.HoverColor
                        HoverFill: =EDSStyles.OutlinedButton.HoverFill
                        OnSelect: |
                            =With(
                                {
                                    IssueTasks: Filter(
                                        'Living Quarter Maintenance Tasks',
                                        ThisRecord.'Issue Registration'.IssueRegistrationGUID = locActiveIssueReport.IssueRegistrationGUID
                                    ),
                                    Tag: Substitute(
                                        locActiveIssueReport.'Functional location',
                                        $"{gblActivePlant.sapPlantId}-",
                                        ""
                                    )
                                },
                                With(
                                    {
                                        Reciever: Switch(
                                            locActiveTaskSection,
                                            "General",
                                            Switch(
                                                DataCardValue6.Selected.Value,
                                                'Maintenance Discipline'.Accommodation,
                                                gblActivePlant.'CA Management Email',
                                                'Maintenance Discipline'.Automation,
                                                gblActivePlant.Automation,
                                                'Maintenance Discipline'.Electrical,
                                                gblActivePlant.Electrical,
                                                'Maintenance Discipline'.Hotel,
                                                gblActivePlant.Hotel,
                                                'Maintenance Discipline'.Kitchen,
                                                gblActivePlant.Kitchen,
                                                'Maintenance Discipline'.Mechanical,
                                                gblActivePlant.Mechanical,
                                                Blank()
                                            ),
                                            "Discipline",
                                            locActiveIssueReportTask.Technician.'Primary Email'
                                        ),
                                        Subject:
                                        Switch(
                                            locActiveTaskSection,
                                            "General",
                                            $"LQ Maintenance request {Tag}",
                                            "Discipline",
                                            $"LQ Maintenance task {Tag}")
                                    },
                                    With(
                                        {
                                            NotificationResult: Office365Outlook.SendEmailV2(
                                                Reciever,
                                                Subject,
                                                htmlDisciplineNotificationMailBodyMTS.HtmlText
                                            )
                                        },
                                        If(
                                            NotificationResult,
                                            Notify(
                                                $"Notifiaction sendt to: {Reciever}",
                                                NotificationType.Success
                                            ),
                                            Notify(
                                                $"Failed to send notifiaction to: {Reciever}",
                                                NotificationType.Error
                                            )
                                        )
                                    )
                                )
                            );
                        PaddingBottom: =EDSStyles.Button.PaddingBottom
                        PaddingLeft: =EDSStyles.Button.PaddingLeft
                        PaddingRight: =EDSStyles.Button.PaddingRight
                        PaddingTop: =EDSStyles.Button.PaddingTop
                        PressedBorderColor: =EDSStyles.Button.PressedBorderColor
                        PressedColor: =EDSStyles.OutlinedButton.PressedColor
                        PressedFill: =EDSStyles.OutlinedButton.PressedFill
                        RadiusBottomLeft: =EDSStyles.Button.RadiusBottomLeft
                        RadiusBottomRight: =EDSStyles.Button.RadiusBottomRight
                        RadiusTopLeft: =EDSStyles.Button.RadiusTopLeft
                        RadiusTopRight: =EDSStyles.Button.RadiusTopRight
                        Size: =EDSStyles.Button.FontSize
                        Text: |-
                            =With(
                                {
                                    DisciplineContact: Switch(
                                        DataCardValue6.Selected.Value,
                                        'Maintenance Discipline'.Accommodation,
                                        gblActivePlant.'CA Management Email',
                                        'Maintenance Discipline'.Automation,
                                        gblActivePlant.Automation,
                                        'Maintenance Discipline'.Electrical,
                                        gblActivePlant.Electrical,
                                        'Maintenance Discipline'.Hotel,
                                        gblActivePlant.Hotel,
                                        'Maintenance Discipline'.Kitchen,
                                        gblActivePlant.Kitchen,
                                        'Maintenance Discipline'.Mechanical,
                                        gblActivePlant.Mechanical,
                                        Blank()
                                    )
                                },
                                Switch(
                                    locActiveTaskSection,
                                    "General",
                                    $"Notify task manager ({locActiveIssueReportTask.Discipline}) - {DisciplineContact}",
                                    "Discipline",
                                    $"Notify technician ({locActiveIssueReportTask.Technician.'Full Name'}) - {locActiveIssueReportTask.Technician.'Primary Email'}"
                                )
                            )
                        Visible: |-
                            =And(
                                locActiveTaskSection <> "Work",
                                //!IsBlank(locActiveIssueReportTask.Discipline),
                                frmSelectedIssueTaskItemMTS.Mode = FormMode.View
                            )
                        X: =16
                        Y: =16
                        ZIndex: =5

                    icoNotificationDetailsMTS As image:
                        AccessibleLabel: ="Icon button that toggles visibility of the notification body preview"
                        BorderColor: =EDSStyles.Icon.BorderColor
                        BorderStyle: =EDSStyles.Icon.BorderStyle
                        BorderThickness: =EDSStyles.Icon.BorderThickness
                        DisabledBorderColor: =EDSStyles.Icon.DisabledBorderColor
                        DisabledFill: =EDSStyles.Icon.DisabledFill
                        Fill: =EDSDefaults.IconBackground
                        FocusedBorderColor: =
                        FocusedBorderThickness: =EDSStyles.Icon.FocusedBorderThickness
                        Height: =EDSStyles.Icon.Height
                        HoverBorderColor: =EDSStyles.Icon.HoverBorderColor
                        HoverFill: =EDSStyles.Icon.HoverFill
                        Image: =If(locPreviewNotificationBody, EDSIcons.Visibility,  EDSIcons.VisibilityOff)
                        LayoutMinHeight: =EDSStyles.Icon.Height
                        OnSelect: |-
                            =UpdateContext({locPreviewNotificationBody: !locPreviewNotificationBody})
                        PaddingBottom: =EDSStyles.Icon.PaddingBottom
                        PaddingLeft: =EDSStyles.Icon.PaddingLeft
                        PaddingRight: =EDSStyles.Icon.PaddingRight
                        PaddingTop: =EDSStyles.Icon.PaddingTop
                        PressedBorderColor: =EDSStyles.Icon.PressedBorderColor
                        PressedFill: =EDSStyles.Icon.PressedFill
                        RadiusBottomLeft: =Self.Height/2
                        RadiusBottomRight: =Self.Height/2
                        RadiusTopLeft: =Self.Height/2
                        RadiusTopRight: =Self.Height/2
                        TabIndex: =0
                        Tooltip: ="Preview the body being sendt to the discipline task management team"
                        Visible: =btnSendNotificationMTS.Visible
                        Width: =Self.Height
                        ZIndex: =6

    grpAppMenuMTS As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =5

        shpAppMenuDismissLayerMTS As rectangle:
            AccessibleLabel: ="Close the active menu"
            BorderColor: =Self.Fill
            Fill: =Color.Transparent
            Height: =App.ActiveScreen.Height-Self.Y
            OnSelect: =Set(gblEDSShowAppMenu, false)
            TabIndex: =0
            Visible: =conAppMenuMTS.Visible
            Width: =Parent.Width
            Y: =40
            ZIndex: =3

        conAppMenuMTS As groupContainer.manualLayoutContainer:
            DropShadow: =DropShadow.Bold
            Fill: =EDSStyles.Menu.Fill
            Height: =48 * galAppMenuMTS.AllItemsCount + 16
            PaddingBottom: |
                =//EDSStyles.Menu.PaddingBottom
                8
            PaddingTop: |-
                =//EDSStyles.Menu.ShadowPadding
                8
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =gblEDSShowAppMenu
            Width: =galAppMenuMTS.Width
            X: =30
            Y: =60
            ZIndex: =4

            galAppMenuMTS As gallery.galleryVertical:
                AccessibleLabel: ="Choose from " & Concat(Self.AllItems, ThisRecord.Title, ", ")
                BorderColor: =EDSStyles.Menu.BorderColor
                BorderStyle: =EDSStyles.Menu.BorderStyle
                BorderThickness: =EDSStyles.Menu.BorderThickness
                Default: |-
                    =Coalesce(
                        LookUp(
                            Self.AllItems,
                            Or(
                                And(
                                    Action = "navigate",
                                    Option.Screen = App.ActiveScreen
                                )
                            )
                        )
                    )
                    /*
                    */
                Fill: |-
                    =//EDSDataTable.Styling.Menu.Fill
                    Color.Transparent
                FocusedBorderThickness: |+
                    =EDSStyles.Menu.FocusedBorderThickness
                    
                Height: =Parent.Height-Parent.PaddingTop-Parent.PaddingBottom
                Items: =colAppMenu
                Layout: =Layout.Vertical
                OnSelect: |
                    =Switch(
                        Lower(ThisItem.Action),
                        "navigate",
                        Navigate(
                            ThisItem.Option.Screen,
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "transition"
                            ).Value
                        ),
                        "launch",
                        Launch(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "address"
                            ).Value
                        ),
                        "notify",
                        Notify(
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "text"
                                ).Value,
                                "Change this formula to what you wish, you can also provide a custom option"
                            ),
                            Coalesce(
                                LookUp(
                                    ThisItem.Option.Arguments,
                                    Name = "notification_type"
                                ).Value,
                                NotificationType.Information
                            ),
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "timeout"
                            ).Value
                        ),
                        "return",
                        Back(
                            LookUp(
                                ThisItem.Option.Arguments,
                                Name = "transition"
                            ).Value
                        ),
                        false
                    );
                ShowScrollbar: =false
                TabIndex: =0
                TemplateFill: |-
                    =If(
                        Or(
                            And(
                                // This will highlight the correct item when used as screen navigation.
                                ThisItem.Action = "navigate",
                                ThisItem.Option.Screen = App.ActiveScreen
                            ),
                            And(
                                ThisItem.Action <> "navigate",
                                ThisItem.IsSelected
                            )
                        ),
                        EDSStyles.Menu.ActiveFill,
                        Color.Transparent
                    )
                TemplatePadding: =0
                TemplateSize: |
                    =EDSStyles.Menu.TemplateHeight
                    //48
                Width: |
                    =//If(EDSMenu.Complex, EDSStyles.Menu.TemplateWidth, EDSStyles.Menu.TemplateWidth-EDSStyles.Menu.IconWidth)
                    If(true, 240, 216)
                Y: =Parent.PaddingTop
                ZIndex: =1

                hcoAppMenuItemMTS As groupContainer.horizontalAutoLayoutContainer:
                    EnableChildFocus: =false
                    Fill: =Color.Transparent
                    Height: =Parent.TemplateHeight
                    LayoutGap: =If(icoAppMenuItemMTS.Visible, EDSStyles.Menu.LayoutGap, 0)
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: |-
                        =//0
                        EDSStyles.Menu.PaddingBottom
                    PaddingLeft: |-
                        =EDSStyles.Menu.PaddingLeft
                        //24
                    PaddingRight: |-
                        =EDSStyles.Menu.PaddingRight
                        //24
                    PaddingTop: |-
                        =0
                        //EDSMenu.Styling.Menu.PaddingTop
                    Width: =Parent.TemplateWidth
                    ZIndex: =1

                    icoAppMenuItemMTS As image:
                        AccessibleLabel: =$"Icon for {btnAppMenuItemActionMTS.Text} menu item"
                        BorderColor: |
                            =EDSStyles.Menu.BorderColor
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =EDSStyles.Menu.BorderThickness
                        DisabledFill: =Color.Transparent
                        FocusedBorderColor: =
                        Height: |-
                            =//EDSDataTable.Styling.Menu.IconHeight
                            Parent.Height
                        HoverFill: =Self.Fill
                        Image: =ThisItem.Icon
                        OnSelect: =Select(btnAppMenuItemActionMTS)
                        PaddingBottom: |
                            =EDSStyles.Menu.IconPaddingBottom
                        PaddingLeft: |
                            =EDSStyles.Menu.IconPaddingLeft
                        PaddingRight: |
                            =EDSStyles.Menu.IconPaddingRight
                        PaddingTop: |
                            =EDSStyles.Menu.IconPaddingTop
                        TabIndex: =0
                        Tooltip: =ThisItem.SubTitle
                        Visible: |-
                            =//EDSMenu.Complex
                            true
                        Width: |
                            =EDSStyles.Menu.IconWidth
                        X: |-
                            =//Parent.Width - Self.Width-EDSDataTable.Styling.Menu.PaddingRight
                            0
                        Y: =1
                        ZIndex: =1

                    btnAppMenuItemActionMTS As button:
                        Align: =Align.Left
                        BorderColor: =Self.Fill
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =EDSStyles.Menu.BorderThickness
                        Color: =EDSStyles.Menu.Color
                        DisabledBorderColor: =Self.DisabledFill
                        DisabledColor: =EDSStyles.Menu.DisabledColor
                        DisabledFill: =EDSStyles.Menu.DisabledFill
                        Fill: |
                            =//If(App.ActiveScreen.Name = ThisItem.Target.Screen.Name, EDSDataTable.Styling.Menu.ActiveFill, EDSDataTable.Styling.Menu.Fill)
                            Color.Transparent
                        FillPortions: =1
                        FocusedBorderColor: =EDSStyles.Menu.FocusedBorderColor
                        FocusedBorderThickness: =EDSStyles.Menu.FocusedBorderThickness
                        Font: =EDSDefaults.Font
                        FontWeight: =FontWeight.Normal
                        Height: =galAppMenuMTS.TemplateHeight
                        HoverBorderColor: =Self.HoverFill
                        HoverColor: =EDSStyles.Menu.HoverColor
                        HoverFill: =EDSStyles.Menu.HoverFill
                        LayoutMinHeight: =48
                        LayoutMinWidth: |-
                            =//EDSStyles.Menu.IconLayoutMinWidth
                            48
                        OnSelect: =Select(shpAppMenuItemOverlayMTS)
                        PaddingBottom: =//EDSDataTable.Styling.Menu.PaddingBottom
                        PaddingLeft: |
                            =//EDSDataTable.Styling.Menu.
                            0
                        PaddingRight: |-
                            =//EDSDataTable.Styling.Menu.PaddingRight+icoMenuItem.Width
                            0
                        PaddingTop: =//EDSDataTable.Styling.Menu.PaddingTop
                        PressedColor: =EDSStyles.Menu.PressedColor
                        PressedFill: =EDSStyles.Menu.PressedFill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0 
                        RadiusTopRight: =0
                        Size: =EDSDefaults.FontSize //Paragraph.BodyShort.Size
                        Text: =ThisItem.Title
                        Tooltip: =ThisItem.SubTitle
                        Width: |-
                            =//galAppMenu.TemplateWidth
                            64
                        ZIndex: =2

                shpAppMenuItemOverlayMTS As rectangle:
                    AccessibleLabel: =$"Menu item for {btnAppMenuItemActionMTS.Text}"
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.Dashed
                    DisabledFill: =Color.Transparent
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: |
                        =EDSStyles.Menu.FocusedBorderColor
                    FocusedBorderThickness: |
                        =EDSStyles.Menu.FocusedBorderThickness
                    Height: =Parent.TemplateHeight
                    HoverFill: |
                        =EDSStyles.Menu.HoverFill
                    OnSelect: =Select(Parent)
                    PressedFill: |
                        =EDSStyles.Menu.PressedFill
                    TabIndex: =0
                    Tooltip: =ThisItem.SubTitle
                    Width: =Parent.TemplateWidth
                    ZIndex: =2

