name: Export and Branch ðŸŸ¡ Zone Solution

on:
  workflow_dispatch:
    inputs:
      # Change this value
      environment_url:
        description: 'the environment url that the solution exists in (defaults to Citizen Dev)'
        required: false
      branch_name:
        description: 'The name of the branch to export the solution to' 
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/

#edit your values here
env:
  TENANT_ID: ${{vars.AZURE_TENANT_ID }}


jobs:
  export-from-dev:
    runs-on: windows-latest
    environment: development
    env:
      ENVIRONMENT_URL: ${{ github.event.inputs.environment_url || vars.ENV_SOURCE_DATAVERSE_ENVIRONMENT_URL }}
      CLIENT_ID: ${{ vars.ENV_DATAVERSE_ENVIRONMENT_APPUSER_AZURE_CLIENT_ID }}
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.ENV_DATAVERSE_ENVIRONMENT_APPUSER_AZURE_CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.ENV_DATAVERSE_ENVIRONMENT_APPUSER_AZURE_CLIENT_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        managed: false
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        
    - name: export-managed-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.ENV_DATAVERSE_ENVIRONMENT_APPUSER_AZURE_CLIENT_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        managed: true
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Both'
        process-canvas-apps: true
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        branch-name: ${{ github.event.inputs.solution_name }}
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
