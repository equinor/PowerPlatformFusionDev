name: export-and-branch-fusion-dev-solution
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
env:
#edit your values here
  SOLUTION_NAME: PowerPlatformFusionDev
  TARGET_ENVIRONMENT_URL: ${{github.event.inputs.target_environment_url}}
  CLIENT_ID: ${{secrets.AZURE_DATAVERSEDEVTOOLS_CLIENT_ID}}
  TENANT_ID: ${{secrets.AZURE_TENANT_ID}}

jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}


    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ env.SOLUTION_NAME }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ env.SOLUTION_NAME }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ env.SOLUTION_NAME }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ env.SOLUTION_NAME }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ env.SOLUTION_NAME }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ env.SOLUTION_NAME }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
