@startuml Canvas App And Power BI Dashboard - Containers

title Power Platform Canvas App and Power BI report connected to enterprise API


!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define EDSICONS https://raw.githubusercontent.com/equinor/design-system/develop/assets/icons/system-icons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define edsIconKey img:EDSICONS/security/key.svg
!define edsIconVerifiedUser img:EDSICONS/security/verified_user.svg
!define edsIconBadge img:EDSICONS/people/badge.svg

!include <c4/C4_Component.puml>
'!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include FONTAWESOME/users.puml

Person(user, "Users", "Users in need of functionality", $sprite="users")

Container_Boundary(powerplatformapp, "Power Platform application") {

    Component(automation, "Automation", "Scheduled or triggered")
    Component(spa, "Canvas App", "PowerApps", "Primary front end application")
    Component(customconnector, "Custom Connector", "Internal API", "custom connector for internal api")
    Component(powerplatformconnector, "Connector", "API", "Microsoft certified connector")
    Component(table, "Table(s)", "dataverse", "Table(s) in solution/environment")

    Rel(spa, customconnector, "requests")
    Rel(automation, customconnector, "requests")
    Rel(spa, powerplatformconnector, "requests")
    Rel(powerplatformconnector, table, "read/writes")
    Rel(automation, powerplatformconnector, "requests")
    Rel(spa, automation, "triggers")
}

Container_Boundary(powerbireport, "Power BI dashboard") {

    Component(dataflow, "Dataflow", "Scheduled or triggered")
    Component(report, "Power BI Report", "Power BI", "Published Power BI Report")
    Component(dataflowcustomconnector, "Dataflow Custom Connector", "PowerQuery", "Power Query custom connector for internal api")
    Component(dataflowconnector, "Dataflow Connector", "PowerQuery", "Microsoft certified Power Query connector")
    Component(dataset, "Report dataset", "dataset", "")

    Rel(report, dataset, "reads")
    Rel(dataflow, dataflowcustomconnector, "reads")
    Rel(dataflow, dataset, "writes")
    Rel(dataflow, dataflowconnector, "reads")
}

Rel(dataflowconnector, internalapi, "requests", "APIKey|BasicAuth|Open")
'Note: the authentication methods available depends on the service, (Excel, PowerBI, Dataverse, datafactory)
Rel(dataflowcustomconnector, internalapi, "requests", "OAuth2")
Rel(dataflowconnector, O365Service, "requests", "OAuth2 (AAD)")

Rel(powerplatformconnector, O365Service, "requests", "user_impersonation")
Rel(customconnector, internalapi, "requests", "user_impersonation")

Container(internalapi, "Internal API", "API", "Business logic and data"){
    Component(api, "Internal API", "REST", "Internal API")
    ComponentDb(db, "Database", "OMNIA", "Business data")
    ComponentDb(db2, "Database", "Generic", "Business data")
    Rel(api, db, "Reads/Writes")
    Rel(api, db2, "Reads/Writes")
}

Container_Boundary(O365Service, "Data services"){
    Container_Ext(mssp, "Content store", "Software system", "OneDrive/SharePoint lists and files")
    Container_Ext(msoutlook, "Email", "Software system", "Outlook mailing")
    Container_Ext(msapproval, "Notification", "Software system", "Office 365 approvals via Teams and Email")
    Container_Ext(genericservice, "Misc", "Software system", "Public service")
}

SHOW_FLOATING_LEGEND()
Lay_Distance(LEGEND(), spa, 0)
@enduml